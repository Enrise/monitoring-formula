<?xml version="1.0" ?>
<zabbix_export>
   <version>4.4</version>
   <date>2020-01-28T11:58:42Z</date>
   <groups>
      <group>
         <name>Templates</name>
      </group>
   </groups>
   <templates>
      <template>
         <template>Template App Varnish Cache</template>
         <name>Template App Varnish Cache</name>
         <groups>
            <group>
               <name>Templates</name>
            </group>
         </groups>
         <applications>
            <application>
               <name>Varnish Cache</name>
            </application>
         </applications>
         <items>
            <item>
               <name>Varnish Cache - varnishd mem.rss (resident set size)</name>
               <type>ZABBIX_ACTIVE</type>
               <key>proc.mem[&quot;{$VARNISH_CACHE.PROC_MEM.VARNISHD.NAME}&quot;,,,,rss]</key>
               <delay>{$VARNISH_CACHE.ITEM_UPDATE_INTERVAL}</delay>
               <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
               <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
               <units>B</units>
               <applications>
                  <application>
                     <name>Varnish Cache</name>
                  </application>
               </applications>
            </item>
            <item>
               <name>Varnish Cache - varnishd mem.size (size of process code + data + stack segments)</name>
               <type>ZABBIX_ACTIVE</type>
               <key>proc.mem[&quot;{$VARNISH_CACHE.PROC_MEM.VARNISHD.NAME}&quot;,,,,size]</key>
               <delay>{$VARNISH_CACHE.ITEM_UPDATE_INTERVAL}</delay>
               <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
               <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
               <units>B</units>
               <applications>
                  <application>
                     <name>Varnish Cache</name>
                  </application>
               </applications>
            </item>
            <item>
               <name>Varnish Cache - varnishd mem.swap (size of swap space used)</name>
               <type>ZABBIX_ACTIVE</type>
               <key>proc.mem[&quot;{$VARNISH_CACHE.PROC_MEM.VARNISHD.NAME}&quot;,,,,swap]</key>
               <delay>{$VARNISH_CACHE.ITEM_UPDATE_INTERVAL}</delay>
               <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
               <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
               <units>B</units>
               <applications>
                  <application>
                     <name>Varnish Cache</name>
                  </application>
               </applications>
            </item>
            <item>
               <name>Varnish Cache - varnishd mem.vsize (virtual memory size)</name>
               <type>ZABBIX_ACTIVE</type>
               <key>proc.mem[&quot;{$VARNISH_CACHE.PROC_MEM.VARNISHD.NAME}&quot;,,,,vsize]</key>
               <delay>{$VARNISH_CACHE.ITEM_UPDATE_INTERVAL}</delay>
               <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
               <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
               <units>B</units>
               <applications>
                  <application>
                     <name>Varnish Cache</name>
                  </application>
               </applications>
            </item>
            <item>
               <name>Varnish Cache - $1 processes</name>
               <type>ZABBIX_ACTIVE</type>
               <key>proc.num[broadcaster]</key>
               <delay>{$VARNISH_CACHE.ITEM_UPDATE_INTERVAL}</delay>
               <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
               <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
               <status>DISABLED</status>
               <applications>
                  <application>
                     <name>Varnish Cache</name>
                  </application>
               </applications>
               <triggers>
                  <trigger>
                     <expression>{last()}&lt;{$VARNISH_CACHE.BROADCASTER_PROCESSES.MIN}</expression>
                     <name>Varnish Broadcaster is not running</name>
                     <priority>DISASTER</priority>
                  </trigger>
               </triggers>
            </item>
            <item>
               <name>Varnish Cache - $1 processes</name>
               <type>ZABBIX_ACTIVE</type>
               <key>proc.num[varnish-agent]</key>
               <delay>{$VARNISH_CACHE.ITEM_UPDATE_INTERVAL}</delay>
               <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
               <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
               <status>DISABLED</status>
               <applications>
                  <application>
                     <name>Varnish Cache</name>
                  </application>
               </applications>
               <triggers>
                  <trigger>
                     <expression>{last()}&lt;{$VARNISH_CACHE.AGENT_PROCESSES.MIN}</expression>
                     <name>Varnish Agent is not running</name>
                     <priority>DISASTER</priority>
                  </trigger>
               </triggers>
            </item>
            <item>
               <name>Varnish Cache - $1 processes</name>
               <type>ZABBIX_ACTIVE</type>
               <key>proc.num[varnishd]</key>
               <delay>{$VARNISH_CACHE.ITEM_UPDATE_INTERVAL}</delay>
               <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
               <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
               <applications>
                  <application>
                     <name>Varnish Cache</name>
                  </application>
               </applications>
               <triggers>
                  <trigger>
                     <expression>{last()}&lt;{$VARNISH_CACHE.VARNISH_PROCESSES.MIN}</expression>
                     <name>Varnish Cache is not running</name>
                     <priority>DISASTER</priority>
                  </trigger>
               </triggers>
            </item>
            <item>
               <name>Varnish Cache - $1 processes</name>
               <type>ZABBIX_ACTIVE</type>
               <key>proc.num[varnishlog]</key>
               <delay>{$VARNISH_CACHE.ITEM_UPDATE_INTERVAL}</delay>
               <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
               <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
               <status>DISABLED</status>
               <applications>
                  <application>
                     <name>Varnish Cache</name>
                  </application>
               </applications>
               <triggers>
                  <trigger>
                     <expression>{last()}&lt;{$VARNISH_CACHE.RAW_LOG_PROCESSES.MIN}</expression>
                     <name>Varnish raw log is not running</name>
                     <priority>DISASTER</priority>
                  </trigger>
               </triggers>
            </item>
            <item>
               <name>Varnish Cache - $1 processes</name>
               <type>ZABBIX_ACTIVE</type>
               <key>proc.num[varnishncsa]</key>
               <delay>{$VARNISH_CACHE.ITEM_UPDATE_INTERVAL}</delay>
               <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
               <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
               <applications>
                  <application>
                     <name>Varnish Cache</name>
                  </application>
               </applications>
               <triggers>
                  <trigger>
                     <expression>{last()}&lt;{$VARNISH_CACHE.NCSA_PROCESSES.MIN}</expression>
                     <name>Varnish NCSA log is not running</name>
                     <priority>DISASTER</priority>
                  </trigger>
               </triggers>
            </item>
            <item>
               <name>Varnish Cache - $1 processes</name>
               <type>ZABBIX_ACTIVE</type>
               <key>proc.num[vcs-agent]</key>
               <delay>{$VARNISH_CACHE.ITEM_UPDATE_INTERVAL}</delay>
               <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
               <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
               <status>DISABLED</status>
               <applications>
                  <application>
                     <name>Varnish Cache</name>
                  </application>
               </applications>
               <triggers>
                  <trigger>
                     <expression>{last()}&lt;{$VARNISH_CACHE.VCS_AGENT_PROCESSES.MIN}</expression>
                     <name>VCS Agent is not running</name>
                     <priority>DISASTER</priority>
                  </trigger>
               </triggers>
            </item>
            <item>
               <name>Varnish Cache - stats</name>
               <type>ZABBIX_ACTIVE</type>
               <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
               <delay>{$VARNISH_CACHE.ITEM_UPDATE_INTERVAL}</delay>
               <history>0</history>
               <trends>0</trends>
               <value_type>TEXT</value_type>
               <applications>
                  <application>
                     <name>Varnish Cache</name>
                  </application>
               </applications>
            </item>
         </items>
         <discovery_rules>
            <discovery_rule>
               <name>Backends discovery</name>
               <type>ZABBIX_ACTIVE</type>
               <key>varnish.discovery[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;,&quot;backends&quot;]</key>
               <delay>{$VARNISH_CACHE.LLD_UPDATE_INTERVAL:&quot;backends&quot;}</delay>
               <lifetime>{$VARNISH_CACHE.LLD_KEEP_LOST_RESOURCES_PERIOD:&quot;backends&quot;}</lifetime>
               <item_prototypes>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - VBE.{#SUBJECT}.bereq_bodybytes (request body bytes / sec)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;VBE.{#SUBJECT_ID}.bereq_bodybytes&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <value_type>FLOAT</value_type>
                     <units>Bps</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.VBE.{#SUBJECT_ID}.bereq_bodybytes']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - VBE.{#SUBJECT}.bereq_hdrbytes (request header bytes / sec)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;VBE.{#SUBJECT_ID}.bereq_hdrbytes&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <value_type>FLOAT</value_type>
                     <units>Bps</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.VBE.{#SUBJECT_ID}.bereq_hdrbytes']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - VBE.{#SUBJECT}.beresp_bodybytes (response body bytes / sec)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;VBE.{#SUBJECT_ID}.beresp_bodybytes&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <value_type>FLOAT</value_type>
                     <units>Bps</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.VBE.{#SUBJECT_ID}.beresp_bodybytes']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - VBE.{#SUBJECT}.beresp_hdrbytes (response header bytes / sec)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;VBE.{#SUBJECT_ID}.beresp_hdrbytes&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <value_type>FLOAT</value_type>
                     <units>Bps</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.VBE.{#SUBJECT_ID}.beresp_hdrbytes']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - VBE.{#SUBJECT}.busy (fetches not attempted due to backend being busy / sec)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;VBE.{#SUBJECT_ID}.busy&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <value_type>FLOAT</value_type>
                     <units>eps</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.VBE.{#SUBJECT_ID}.busy']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - VBE.{#SUBJECT}.conn (connections to backend)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;VBE.{#SUBJECT_ID}.conn&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.VBE.{#SUBJECT_ID}.conn']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - VBE.{#SUBJECT}.fail (connections failed / sec)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;VBE.{#SUBJECT_ID}.fail&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <value_type>FLOAT</value_type>
                     <units>eps</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.VBE.{#SUBJECT_ID}.fail']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - VBE.{#SUBJECT}.fail_eacces (connections failed with EACCES or EPERM / sec)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;VBE.{#SUBJECT_ID}.fail_eacces&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <value_type>FLOAT</value_type>
                     <units>eps</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.VBE.{#SUBJECT_ID}.fail_eacces']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - VBE.{#SUBJECT}.fail_eaddrnotavail (connections failed with EADDRNOTAVAIL / sec)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;VBE.{#SUBJECT_ID}.fail_eaddrnotavail&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <value_type>FLOAT</value_type>
                     <units>eps</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.VBE.{#SUBJECT_ID}.fail_eaddrnotavail']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - VBE.{#SUBJECT}.fail_econnrefused (connections failed with ECONNREFUSED / sec)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;VBE.{#SUBJECT_ID}.fail_econnrefused&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <value_type>FLOAT</value_type>
                     <units>eps</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.VBE.{#SUBJECT_ID}.fail_econnrefused']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - VBE.{#SUBJECT}.fail_enetunreach (connections failed with ENETUNREACH / sec)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;VBE.{#SUBJECT_ID}.fail_enetunreach&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <value_type>FLOAT</value_type>
                     <units>eps</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.VBE.{#SUBJECT_ID}.fail_enetunreach']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - VBE.{#SUBJECT}.fail_etimedout (connections failed with ETIMEDOUT / sec)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;VBE.{#SUBJECT_ID}.fail_etimedout&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <value_type>FLOAT</value_type>
                     <units>eps</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.VBE.{#SUBJECT_ID}.fail_etimedout']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - VBE.{#SUBJECT}.fail_other (connections failed for other reason / sec)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;VBE.{#SUBJECT_ID}.fail_other&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <value_type>FLOAT</value_type>
                     <units>eps</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.VBE.{#SUBJECT_ID}.fail_other']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - VBE.{#SUBJECT}.happy (happy health probe)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;VBE.{#SUBJECT_ID}.happy&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.VBE.{#SUBJECT_ID}.happy']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - VBE.{#SUBJECT}.healthy</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;VBE.{#SUBJECT_ID}.healthy&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.VBE.{#SUBJECT_ID}.healthy']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                           <type>BOOL_TO_DECIMAL</type>
                           <params/>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                     <trigger_prototypes>
                        <trigger_prototype>
                           <expression>{max({$VARNISH_CACHE.BACKEND_HEALTHINESS.SAMPLES:&quot;{#LOCATION_ID}:{#SUBJECT_ID}&quot;})}&lt;1</expression>
                           <name>Varnish Cache[{#LOCATION}] {#SUBJECT} backend is sick</name>
                           <priority>HIGH</priority>
                        </trigger_prototype>
                     </trigger_prototypes>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - VBE.{#SUBJECT}.helddown (connection opens not attempted / sec)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;VBE.{#SUBJECT_ID}.helddown&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <value_type>FLOAT</value_type>
                     <units>eps</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.VBE.{#SUBJECT_ID}.helddown']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - VBE.{#SUBJECT}.pipe_hdrbytes (pipe request header bytes / sec)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;VBE.{#SUBJECT_ID}.pipe_hdrbytes&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <value_type>FLOAT</value_type>
                     <units>Bps</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.VBE.{#SUBJECT_ID}.pipe_hdrbytes']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - VBE.{#SUBJECT}.pipe_in (piped bytes from backend / sec)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;VBE.{#SUBJECT_ID}.pipe_in&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <value_type>FLOAT</value_type>
                     <units>Bps</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.VBE.{#SUBJECT_ID}.pipe_in']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - VBE.{#SUBJECT}.pipe_out (piped bytes to backend / sec)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;VBE.{#SUBJECT_ID}.pipe_out&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <value_type>FLOAT</value_type>
                     <units>Bps</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.VBE.{#SUBJECT_ID}.pipe_out']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - VBE.{#SUBJECT}.req (backend requests sent / sec)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;VBE.{#SUBJECT_ID}.req&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <value_type>FLOAT</value_type>
                     <units>eps</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.VBE.{#SUBJECT_ID}.req']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - VBE.{#SUBJECT}.unhealthy (fetches not attempted due to backend being unhealthy / sec)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;VBE.{#SUBJECT_ID}.unhealthy&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <value_type>FLOAT</value_type>
                     <units>eps</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.VBE.{#SUBJECT_ID}.unhealthy']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - VBE.{#SUBJECT}.last_happy</name>
                     <type>CALCULATED</type>
                     <key>varnish[&quot;{#LOCATION_ID}&quot;,&quot;VBE.{#SUBJECT_ID}.last_happy&quot;]</key>
                     <delay>{$VARNISH_CACHE.ITEM_UPDATE_INTERVAL}</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <params>band(&quot;varnish.stat[\&quot;{#LOCATION_ID}\&quot;,\&quot;VBE.{#SUBJECT_ID}.happy\&quot;]&quot;,#1,1)</params>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                  </item_prototype>
               </item_prototypes>
               <graph_prototypes>
                  <graph_prototype>
                     <name>Varnish Cache[{#LOCATION}] &gt; Backends[{#SUBJECT}]: bytes received from backend</name>
                     <type>STACKED</type>
                     <graph_items>
                        <graph_item>
                           <color>00C800</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;VBE.{#SUBJECT_ID}.beresp_hdrbytes&quot;]</key>
                           </item>
                        </graph_item>
                        <graph_item>
                           <sortorder>1</sortorder>
                           <color>C80000</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;VBE.{#SUBJECT_ID}.beresp_bodybytes&quot;]</key>
                           </item>
                        </graph_item>
                        <graph_item>
                           <sortorder>2</sortorder>
                           <color>C800C8</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;VBE.{#SUBJECT_ID}.pipe_in&quot;]</key>
                           </item>
                        </graph_item>
                     </graph_items>
                  </graph_prototype>
                  <graph_prototype>
                     <name>Varnish Cache[{#LOCATION}] &gt; Backends[{#SUBJECT}]: bytes sent to backend</name>
                     <type>STACKED</type>
                     <graph_items>
                        <graph_item>
                           <color>00C800</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;VBE.{#SUBJECT_ID}.bereq_hdrbytes&quot;]</key>
                           </item>
                        </graph_item>
                        <graph_item>
                           <sortorder>1</sortorder>
                           <color>C80000</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;VBE.{#SUBJECT_ID}.bereq_bodybytes&quot;]</key>
                           </item>
                        </graph_item>
                        <graph_item>
                           <sortorder>2</sortorder>
                           <color>0000C8</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;VBE.{#SUBJECT_ID}.pipe_hdrbytes&quot;]</key>
                           </item>
                        </graph_item>
                        <graph_item>
                           <sortorder>3</sortorder>
                           <color>C800C8</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;VBE.{#SUBJECT_ID}.pipe_out&quot;]</key>
                           </item>
                        </graph_item>
                     </graph_items>
                  </graph_prototype>
                  <graph_prototype>
                     <name>Varnish Cache[{#LOCATION}] &gt; Backends[{#SUBJECT}]: concurrent connections to backend</name>
                     <graph_items>
                        <graph_item>
                           <drawtype>FILLED_REGION</drawtype>
                           <color>00C800</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;VBE.{#SUBJECT_ID}.conn&quot;]</key>
                           </item>
                        </graph_item>
                     </graph_items>
                  </graph_prototype>
                  <graph_prototype>
                     <name>Varnish Cache[{#LOCATION}] &gt; Backends[{#SUBJECT}]: failed connection attempts</name>
                     <type>STACKED</type>
                     <graph_items>
                        <graph_item>
                           <color>00C800</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;VBE.{#SUBJECT_ID}.fail_eacces&quot;]</key>
                           </item>
                        </graph_item>
                        <graph_item>
                           <sortorder>1</sortorder>
                           <color>C80000</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;VBE.{#SUBJECT_ID}.fail_eaddrnotavail&quot;]</key>
                           </item>
                        </graph_item>
                        <graph_item>
                           <sortorder>2</sortorder>
                           <color>0000C8</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;VBE.{#SUBJECT_ID}.fail_econnrefused&quot;]</key>
                           </item>
                        </graph_item>
                        <graph_item>
                           <sortorder>3</sortorder>
                           <color>C800C8</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;VBE.{#SUBJECT_ID}.fail_enetunreach&quot;]</key>
                           </item>
                        </graph_item>
                        <graph_item>
                           <sortorder>4</sortorder>
                           <color>00C8C8</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;VBE.{#SUBJECT_ID}.fail_etimedout&quot;]</key>
                           </item>
                        </graph_item>
                        <graph_item>
                           <sortorder>5</sortorder>
                           <color>C8C800</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;VBE.{#SUBJECT_ID}.fail_other&quot;]</key>
                           </item>
                        </graph_item>
                     </graph_items>
                  </graph_prototype>
                  <graph_prototype>
                     <name>Varnish Cache[{#LOCATION}] &gt; Backends[{#SUBJECT}]: fetches not attempted</name>
                     <type>STACKED</type>
                     <graph_items>
                        <graph_item>
                           <color>00C800</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;VBE.{#SUBJECT_ID}.unhealthy&quot;]</key>
                           </item>
                        </graph_item>
                        <graph_item>
                           <sortorder>1</sortorder>
                           <color>C80000</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;VBE.{#SUBJECT_ID}.busy&quot;]</key>
                           </item>
                        </graph_item>
                        <graph_item>
                           <sortorder>2</sortorder>
                           <color>0000C8</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;VBE.{#SUBJECT_ID}.fail&quot;]</key>
                           </item>
                        </graph_item>
                        <graph_item>
                           <sortorder>3</sortorder>
                           <color>C800C8</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;VBE.{#SUBJECT_ID}.helddown&quot;]</key>
                           </item>
                        </graph_item>
                     </graph_items>
                  </graph_prototype>
                  <graph_prototype>
                     <name>Varnish Cache[{#LOCATION}] &gt; Backends[{#SUBJECT}]: healthiness</name>
                     <graph_items>
                        <graph_item>
                           <color>00C800</color>
                           <calc_fnc>MIN</calc_fnc>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;VBE.{#SUBJECT_ID}.healthy&quot;]</key>
                           </item>
                        </graph_item>
                        <graph_item>
                           <sortorder>1</sortorder>
                           <color>C80000</color>
                           <calc_fnc>MIN</calc_fnc>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish[&quot;{#LOCATION_ID}&quot;,&quot;VBE.{#SUBJECT_ID}.last_happy&quot;]</key>
                           </item>
                        </graph_item>
                     </graph_items>
                  </graph_prototype>
                  <graph_prototype>
                     <name>Varnish Cache[{#LOCATION}] &gt; Backends[{#SUBJECT}]: requests sent to backend</name>
                     <graph_items>
                        <graph_item>
                           <drawtype>FILLED_REGION</drawtype>
                           <color>00C800</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;VBE.{#SUBJECT_ID}.req&quot;]</key>
                           </item>
                        </graph_item>
                     </graph_items>
                  </graph_prototype>
               </graph_prototypes>
            </discovery_rule>
            <discovery_rule>
               <name>Counters discovery</name>
               <type>ZABBIX_ACTIVE</type>
               <key>varnish.discovery[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;,&quot;counters&quot;]</key>
               <delay>{$VARNISH_CACHE.LLD_UPDATE_INTERVAL:&quot;counters&quot;}</delay>
               <lifetime>{$VARNISH_CACHE.LLD_KEEP_LOST_RESOURCES_PERIOD:&quot;counters&quot;}</lifetime>
               <item_prototypes>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - COUNTER.{#SUBJECT} (counter value / sec)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;COUNTER.{#SUBJECT_ID}&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <value_type>FLOAT</value_type>
                     <units>eps</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.COUNTER.{#SUBJECT_ID}']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
               </item_prototypes>
            </discovery_rule>
            <discovery_rule>
               <name>Items discovery</name>
               <type>ZABBIX_ACTIVE</type>
               <key>varnish.discovery[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;,&quot;items&quot;]</key>
               <delay>{$VARNISH_CACHE.LLD_UPDATE_INTERVAL:&quot;items&quot;}</delay>
               <lifetime>{$VARNISH_CACHE.LLD_KEEP_LOST_RESOURCES_PERIOD:&quot;items&quot;}</lifetime>
               <item_prototypes>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - MAIN.backend_busy (backend connections too many / sec)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.backend_busy&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <value_type>FLOAT</value_type>
                     <units>eps</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.MAIN.backend_busy']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - MAIN.backend_conn (backend connections successfully stablished / sec)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.backend_conn&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <value_type>FLOAT</value_type>
                     <units>eps</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.MAIN.backend_conn']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - MAIN.backend_fail (backend connection failures / sec)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.backend_fail&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <value_type>FLOAT</value_type>
                     <units>eps</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.MAIN.backend_fail']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                     <trigger_prototypes>
                        <trigger_prototype>
                           <expression>{min({$VARNISH_CACHE.BACKEND_CONNECTION_FAILURES_RATE.SAMPLES:&quot;{#LOCATION_ID}&quot;})}&gt;{$VARNISH_CACHE.BACKEND_CONNECTION_FAILURES_RATE.MAX:&quot;{#LOCATION_ID}&quot;}</expression>
                           <name>Varnish Cache[{#LOCATION}] is getting backend connection failures</name>
                           <priority>WARNING</priority>
                        </trigger_prototype>
                     </trigger_prototypes>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - MAIN.backend_recycle (backend connection recycles / sec)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.backend_recycle&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <value_type>FLOAT</value_type>
                     <units>eps</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.MAIN.backend_recycle']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - MAIN.backend_req (backend requests made / sec)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.backend_req&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <value_type>FLOAT</value_type>
                     <units>eps</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.MAIN.backend_req']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - MAIN.backend_retry (backend connnections retry / sec)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.backend_retry&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <value_type>FLOAT</value_type>
                     <units>eps</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.MAIN.backend_retry']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - MAIN.backend_reuse (backend connection reuses / sec)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.backend_reuse&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <value_type>FLOAT</value_type>
                     <units>eps</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.MAIN.backend_reuse']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - MAIN.backend_unhealthy (backend connections not attempted / sec)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.backend_unhealthy&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <value_type>FLOAT</value_type>
                     <units>eps</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.MAIN.backend_unhealthy']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - MAIN.bans (number of bans)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.bans&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.MAIN.bans']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - MAIN.bans_lurker_obj_killed (objects killed by bans lurker / sec)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.bans_lurker_obj_killed&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <value_type>FLOAT</value_type>
                     <units>eps</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.MAIN.bans_lurker_obj_killed']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - MAIN.bans_lurker_obj_killed_cutoff (objects killed by bans lurker for cutoff / sec)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.bans_lurker_obj_killed_cutoff&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <value_type>FLOAT</value_type>
                     <units>eps</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.MAIN.bans_lurker_obj_killed_cutoff']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - MAIN.bans_obj_killed (objects killed by bans during lookup / sec)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.bans_obj_killed&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <value_type>FLOAT</value_type>
                     <units>eps</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.MAIN.bans_obj_killed']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - MAIN.busy_killed (requests killed after sleep on busy objhdr / sec)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.busy_killed&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <value_type>FLOAT</value_type>
                     <units>eps</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.MAIN.busy_killed']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - MAIN.busy_sleep (requests sent to sleep on busy objhdr / sec)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.busy_sleep&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <value_type>FLOAT</value_type>
                     <units>eps</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.MAIN.busy_sleep']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - MAIN.busy_wakeup (requests woken after sleep on busy objhdr / sec)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.busy_wakeup&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <value_type>FLOAT</value_type>
                     <units>eps</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.MAIN.busy_wakeup']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - MAIN.cache_hit (cache hits / sec)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.cache_hit&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <value_type>FLOAT</value_type>
                     <units>eps</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.MAIN.cache_hit']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - MAIN.cache_hitmiss (cache hits for miss / sec)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.cache_hitmiss&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <value_type>FLOAT</value_type>
                     <units>eps</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.MAIN.cache_hitmiss']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - MAIN.cache_hitpass (cache hits for pass / sec)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.cache_hitpass&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <value_type>FLOAT</value_type>
                     <units>eps</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.MAIN.cache_hitpass']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - MAIN.cache_hit_grace (cache grace hits / sec)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.cache_hit_grace&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <value_type>FLOAT</value_type>
                     <units>eps</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.MAIN.cache_hit_grace']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - MAIN.cache_miss (cache misses / sec)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.cache_miss&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <value_type>FLOAT</value_type>
                     <units>eps</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.MAIN.cache_miss']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - MAIN.client_req (good -parseable- client requests received / sec)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.client_req&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <value_type>FLOAT</value_type>
                     <units>eps</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.MAIN.client_req']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - MAIN.client_req_400 (client requests received, subject to 400 errors / sec)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.client_req_400&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <value_type>FLOAT</value_type>
                     <units>eps</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.MAIN.client_req_400']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - MAIN.client_req_417 (client requests received, subject to 417 errors / sec)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.client_req_417&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <value_type>FLOAT</value_type>
                     <units>eps</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.MAIN.client_req_417']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - MAIN.client_resp_500 (delivery failed due to insufficient workspace / sec)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.client_resp_500&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <value_type>FLOAT</value_type>
                     <units>eps</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.MAIN.client_resp_500']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - MAIN.esi_errors (ESI parse errors -unlock- / sec)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.esi_errors&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <value_type>FLOAT</value_type>
                     <units>eps</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.MAIN.esi_errors']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - MAIN.esi_maxdepth (ESI hit max_esi_depth / sec)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.esi_maxdepth&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <value_type>FLOAT</value_type>
                     <units>eps</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.MAIN.esi_maxdepth']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - MAIN.esi_warnings (ESI parse warnings -unlock- / sec)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.esi_warnings&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <value_type>FLOAT</value_type>
                     <units>eps</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.MAIN.esi_warnings']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - MAIN.fetch_1xx (beresps with no body because of 1xx responses / sec)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.fetch_1xx&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <value_type>FLOAT</value_type>
                     <units>eps</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.MAIN.fetch_1xx']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - MAIN.fetch_204 (beresps with no body because of 204 responses / sec)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.fetch_204&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <value_type>FLOAT</value_type>
                     <units>eps</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.MAIN.fetch_204']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - MAIN.fetch_304 (beresps with not body because of 304 responses / sec)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.fetch_304&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <value_type>FLOAT</value_type>
                     <units>eps</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.MAIN.fetch_304']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - MAIN.fetch_bad (bad fetches because beresp.body length/fetch could not be determined / sec)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.fetch_bad&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <value_type>FLOAT</value_type>
                     <units>eps</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.MAIN.fetch_bad']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - MAIN.fetch_chunked (beresps with body chunked / sec)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.fetch_chunked&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <value_type>FLOAT</value_type>
                     <units>eps</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.MAIN.fetch_chunked']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - MAIN.fetch_eof (beresps with body EOF / sec)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.fetch_eof&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <value_type>FLOAT</value_type>
                     <units>eps</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.MAIN.fetch_eof']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - MAIN.fetch_failed (failed fetches -all causes- / sec)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.fetch_failed&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <value_type>FLOAT</value_type>
                     <units>eps</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.MAIN.fetch_failed']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - MAIN.fetch_head (beresps with not body because of HEAD requests / sec)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.fetch_head&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <value_type>FLOAT</value_type>
                     <units>eps</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.MAIN.fetch_head']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - MAIN.fetch_length (beresps with body Content-Length / sec)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.fetch_length&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <value_type>FLOAT</value_type>
                     <units>eps</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.MAIN.fetch_length']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - MAIN.fetch_none (beresps with no body / sec)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.fetch_none&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <value_type>FLOAT</value_type>
                     <units>eps</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.MAIN.fetch_none']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - MAIN.fetch_no_thread (failed fetches because no thread available / sec)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.fetch_no_thread&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <value_type>FLOAT</value_type>
                     <units>eps</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.MAIN.fetch_no_thread']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - MAIN.goto_dns_cache_hits (cache hits within vmod_goto's DNS / sec)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.goto_dns_cache_hits&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <value_type>FLOAT</value_type>
                     <units>eps</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.MAIN.goto_dns_cache_hits']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - MAIN.goto_dns_lookups (number of DNS lookups from vmod_goto's DNS / sec)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.goto_dns_lookups&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <value_type>FLOAT</value_type>
                     <units>eps</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.MAIN.goto_dns_lookups']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - MAIN.goto_dns_lookup_fails (number of unresolved DNS lookups from vmod_goto's DNS / sec)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.goto_dns_lookup_fails&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <value_type>FLOAT</value_type>
                     <units>eps</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.MAIN.goto_dns_lookup_fails']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - MAIN.losthdr (HTTP header overflows / sec)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.losthdr&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <value_type>FLOAT</value_type>
                     <units>eps</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.MAIN.losthdr']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                     <trigger_prototypes>
                        <trigger_prototype>
                           <expression>{last()}&gt;{$VARNISH_CACHE.HTTP_HEADER_OVERFLOWS_RATE.MAX:&quot;{#LOCATION_ID}&quot;}</expression>
                           <name>Varnish Cache[{#LOCATION}] is generating HTTP header overflows</name>
                           <priority>WARNING</priority>
                        </trigger_prototype>
                     </trigger_prototypes>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - MAIN.n_backend (number of backends)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.n_backend&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.MAIN.n_backend']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - MAIN.n_expired (expired objects / sec)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.n_expired&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <value_type>FLOAT</value_type>
                     <units>eps</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.MAIN.n_expired']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - MAIN.n_gunzip (gunzip operations / sec)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.n_gunzip&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <value_type>FLOAT</value_type>
                     <units>eps</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.MAIN.n_gunzip']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - MAIN.n_gzip (gzip operations / sec)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.n_gzip&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <value_type>FLOAT</value_type>
                     <units>eps</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.MAIN.n_gzip']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - MAIN.n_lru_limited (nuke_limit reachs / sec)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.n_lru_limited&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <value_type>FLOAT</value_type>
                     <units>eps</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.MAIN.n_lru_limited']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                     <trigger_prototypes>
                        <trigger_prototype>
                           <expression>{last()}&gt;{$VARNISH_CACHE.NUKE_LIMIT_REACHS_RATE.MAX:&quot;{#LOCATION_ID}&quot;}</expression>
                           <recovery_mode>RECOVERY_EXPRESSION</recovery_mode>
                           <recovery_expression>{max({$VARNISH_CACHE.NUKE_LIMIT_REACHS_RATE.RECOVERY.SAMPLES:&quot;{#LOCATION_ID}&quot;})}&lt;={$VARNISH_CACHE.NUKE_LIMIT_REACHS_RATE.MAX:&quot;{#LOCATION_ID}&quot;}</recovery_expression>
                           <name>Varnish Cache[{#LOCATION}] is reaching nuke_limit</name>
                           <priority>WARNING</priority>
                        </trigger_prototype>
                     </trigger_prototypes>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - MAIN.n_lru_moved (LRU moved objects / sec)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.n_lru_moved&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <value_type>FLOAT</value_type>
                     <units>eps</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.MAIN.n_lru_moved']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - MAIN.n_lru_nuked (LRU nuked objects / sec)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.n_lru_nuked&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <value_type>FLOAT</value_type>
                     <units>eps</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.MAIN.n_lru_nuked']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                     <trigger_prototypes>
                        <trigger_prototype>
                           <expression>{last()}&gt;{$VARNISH_CACHE.LRU_NUKED_OBJECTS_RATE.MAX:&quot;{#LOCATION_ID}&quot;}</expression>
                           <recovery_mode>RECOVERY_EXPRESSION</recovery_mode>
                           <recovery_expression>{max({$VARNISH_CACHE.LRU_NUKED_OBJECTS_RATE.RECOVERY.SAMPLES:&quot;{#LOCATION_ID}&quot;})}&lt;={$VARNISH_CACHE.LRU_NUKED_OBJECTS_RATE.MAX:&quot;{#LOCATION_ID}&quot;}</recovery_expression>
                           <name>Varnish Cache[{#LOCATION}] is nuking objects</name>
                           <priority>WARNING</priority>
                        </trigger_prototype>
                     </trigger_prototypes>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - MAIN.n_object (object structs made)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.n_object&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.MAIN.n_object']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - MAIN.n_objectcore (objectcore structs made)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.n_objectcore&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.MAIN.n_objectcore']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - MAIN.n_objecthead (objecthead structs made)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.n_objecthead&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.MAIN.n_objecthead']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - MAIN.n_obj_purged (purged objects / sec)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.n_obj_purged&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <value_type>FLOAT</value_type>
                     <units>eps</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.MAIN.n_obj_purged']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - MAIN.n_purges (purge operations executed / sec)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.n_purges&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <value_type>FLOAT</value_type>
                     <units>eps</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.MAIN.n_purges']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - MAIN.n_test_gunzip (test gunzip operations / sec)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.n_test_gunzip&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <value_type>FLOAT</value_type>
                     <units>eps</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.MAIN.n_test_gunzip']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - MAIN.n_vcl (number of loaded VCLs in total)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.n_vcl&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.MAIN.n_vcl']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - MAIN.req_dropped (HTTP/2 stream refused / sec)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.req_dropped&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <value_type>FLOAT</value_type>
                     <units>eps</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.MAIN.req_dropped']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - MAIN.sc_vcl_failure (session Err VCL_FAILURE / sec)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.sc_vcl_failure&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <value_type>FLOAT</value_type>
                     <units>eps</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.MAIN.sc_vcl_failure']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - MAIN.sess_closed (sessions closed / sec)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.sess_closed&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <value_type>FLOAT</value_type>
                     <units>eps</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.MAIN.sess_closed']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - MAIN.sess_closed_err (sessions closed with error / sec)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.sess_closed_err&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <value_type>FLOAT</value_type>
                     <units>eps</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.MAIN.sess_closed_err']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - MAIN.sess_conn (sessions successfully accepted / sec)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.sess_conn&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <value_type>FLOAT</value_type>
                     <units>eps</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.MAIN.sess_conn']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - MAIN.sess_drop (sessions dropped due to lack of worker thread / sec)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.sess_drop&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <value_type>FLOAT</value_type>
                     <units>eps</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.MAIN.sess_drop']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - MAIN.sess_dropped (sessions dropped because the queue was too long / sec)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.sess_dropped&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <value_type>FLOAT</value_type>
                     <units>eps</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.MAIN.sess_dropped']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - MAIN.sess_fail (sessions TCP accept failures / sec)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.sess_fail&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <value_type>FLOAT</value_type>
                     <units>eps</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.MAIN.sess_fail']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - MAIN.sess_fail_ebadf (session accept failures: bad file descriptor / sec)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.sess_fail_ebadf&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <value_type>FLOAT</value_type>
                     <units>eps</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.MAIN.sess_fail_ebadf']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - MAIN.sess_fail_econnaborted (session accept failures: connection aborted / sec)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.sess_fail_econnaborted&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <value_type>FLOAT</value_type>
                     <units>eps</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.MAIN.sess_fail_econnaborted']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - MAIN.sess_fail_eintr (session accept failures: interrupted system call / sec)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.sess_fail_eintr&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <value_type>FLOAT</value_type>
                     <units>eps</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.MAIN.sess_fail_eintr']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - MAIN.sess_fail_emfile (session accept failures: too many open files / sec)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.sess_fail_emfile&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <value_type>FLOAT</value_type>
                     <units>eps</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.MAIN.sess_fail_emfile']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - MAIN.sess_fail_enomem (session accept failures: not enough memory / sec)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.sess_fail_enomem&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <value_type>FLOAT</value_type>
                     <units>eps</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.MAIN.sess_fail_enomem']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - MAIN.sess_fail_other (session accept failures: other / sec)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.sess_fail_other&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <value_type>FLOAT</value_type>
                     <units>eps</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.MAIN.sess_fail_other']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - MAIN.sess_queued (sessions queued waiting for a thread / sec)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.sess_queued&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <value_type>FLOAT</value_type>
                     <units>eps</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.MAIN.sess_queued']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - MAIN.sess_readahead (sessions read ahead / sec)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.sess_readahead&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <value_type>FLOAT</value_type>
                     <units>eps</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.MAIN.sess_readahead']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - MAIN.s_fetch (backend fetches initiated / sec)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.s_fetch&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <value_type>FLOAT</value_type>
                     <units>eps</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.MAIN.s_fetch']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - MAIN.s_pass (passed requests seen / sec)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.s_pass&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <value_type>FLOAT</value_type>
                     <units>eps</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.MAIN.s_pass']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - MAIN.s_pipe (pipe sessions seen / sec)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.s_pipe&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <value_type>FLOAT</value_type>
                     <units>eps</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.MAIN.s_pipe']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - MAIN.s_pipe_hdrbytes (pipe request header bytes / sec)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.s_pipe_hdrbytes&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <value_type>FLOAT</value_type>
                     <units>Bps</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.MAIN.s_pipe_hdrbytes']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - MAIN.s_pipe_in (piped bytes from client / sec)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.s_pipe_in&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <value_type>FLOAT</value_type>
                     <units>Bps</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.MAIN.s_pipe_in']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - MAIN.s_pipe_out (piped bytes to client / sec)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.s_pipe_out&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <value_type>FLOAT</value_type>
                     <units>Bps</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.MAIN.s_pipe_out']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - MAIN.s_req (requests seen / sec)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.s_req&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <value_type>FLOAT</value_type>
                     <units>eps</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.MAIN.s_req']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - MAIN.s_req_bodybytes (request body bytes / sec)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.s_req_bodybytes&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <value_type>FLOAT</value_type>
                     <units>Bps</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.MAIN.s_req_bodybytes']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - MAIN.s_req_hdrbytes (request header bytes / sec)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.s_req_hdrbytes&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <value_type>FLOAT</value_type>
                     <units>Bps</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.MAIN.s_req_hdrbytes']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - MAIN.s_resp_bodybytes (response body bytes / sec)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.s_resp_bodybytes&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <value_type>FLOAT</value_type>
                     <units>Bps</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.MAIN.s_resp_bodybytes']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - MAIN.s_resp_hdrbytes (response header bytes / sec)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.s_resp_hdrbytes&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <value_type>FLOAT</value_type>
                     <units>Bps</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.MAIN.s_resp_hdrbytes']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - MAIN.s_sess (sessions seen / sec)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.s_sess&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <value_type>FLOAT</value_type>
                     <units>eps</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.MAIN.s_sess']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - MAIN.s_synth (synthetic responses made / sec)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.s_synth&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <value_type>FLOAT</value_type>
                     <units>eps</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.MAIN.s_synth']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - MAIN.threads (number of threads in all pools)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.threads&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.MAIN.threads']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                     <trigger_prototypes>
                        <trigger_prototype>
                           <expression>{last()}&gt;{$VARNISH_CACHE.THREADS.MAX:&quot;{#LOCATION_ID}&quot;}</expression>
                           <name>Varnish Cache[{#LOCATION}] has surpassed {$VARNISH_CACHE.THREADS.MAX} threads</name>
                           <priority>WARNING</priority>
                        </trigger_prototype>
                     </trigger_prototypes>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - MAIN.threads_created (threads created in all pools / sec)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.threads_created&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <value_type>FLOAT</value_type>
                     <units>eps</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.MAIN.threads_created']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - MAIN.threads_destroyed (threads destroyed in all pools / sec)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.threads_destroyed&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <value_type>FLOAT</value_type>
                     <units>eps</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.MAIN.threads_destroyed']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - MAIN.threads_failed (failed thread creations / sec)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.threads_failed&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <value_type>FLOAT</value_type>
                     <units>eps</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.MAIN.threads_failed']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - MAIN.threads_limited (times more threads were needed but limit was reached in a thread pool / sec)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.threads_limited&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <value_type>FLOAT</value_type>
                     <units>eps</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.MAIN.threads_limited']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - MAIN.thread_queue_len (length of session queue waiting for threads)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.thread_queue_len&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.MAIN.thread_queue_len']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - MAIN.uptime (child process uptime)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.uptime&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <units>uptime</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.MAIN.uptime']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - MAIN.vcl_fail (VCL failures / sec)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.vcl_fail&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <value_type>FLOAT</value_type>
                     <units>eps</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.MAIN.vcl_fail']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                     <trigger_prototypes>
                        <trigger_prototype>
                           <expression>{$VARNISH_CACHE.VCL_FAILURES_RATE.ENABLED:&quot;{#LOCATION_ID}&quot;} and {last()}&gt;{$VARNISH_CACHE.VCL_FAILURES_RATE.MAX:&quot;{#LOCATION_ID}&quot;}</expression>
                           <name>Varnish Cache[{#LOCATION}] is generating VCL failures</name>
                           <priority>WARNING</priority>
                        </trigger_prototype>
                     </trigger_prototypes>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - MAIN.vmods (loaded VMODs)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.vmods&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.MAIN.vmods']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - MAIN.ws_backend_overflow (workspace_backend overflows / sec)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.ws_backend_overflow&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <value_type>FLOAT</value_type>
                     <units>eps</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.MAIN.ws_backend_overflow']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - MAIN.ws_client_overflow (workspace_client overflows / sec)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.ws_client_overflow&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <value_type>FLOAT</value_type>
                     <units>eps</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.MAIN.ws_client_overflow']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - MAIN.ws_session_overflow (workspace_session overflows / sec)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.ws_session_overflow&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <value_type>FLOAT</value_type>
                     <units>eps</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.MAIN.ws_session_overflow']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - MAIN.ws_thread_overflow (workspace_thread overflows / sec)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.ws_thread_overflow&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <value_type>FLOAT</value_type>
                     <units>eps</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.MAIN.ws_thread_overflow']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - MEMORY.data (data + stack size)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MEMORY.data&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <units>B</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.MEMORY.data']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - MEMORY.resident (resident size)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MEMORY.resident&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <units>B</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.MEMORY.resident']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - MEMORY.shared (shared size)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MEMORY.shared&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <units>B</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.MEMORY.shared']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - MEMORY.size (virtual size)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MEMORY.size&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <units>B</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.MEMORY.size']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - MEMORY.swap (swapped size)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MEMORY.swap&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <units>B</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.MEMORY.swap']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - MEMORY.text (code size)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MEMORY.text&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <units>B</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.MEMORY.text']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - MGT.uptime (management process uptime)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MGT.uptime&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <units>uptime</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.MGT.uptime']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - VHA6.broadcasts (executed broadcasts / sec)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;VHA6.broadcasts&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <value_type>FLOAT</value_type>
                     <units>eps</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.VHA6.broadcasts']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - VHA6.broadcast_candidates (broadcast candidates / sec)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;VHA6.broadcast_candidates&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <value_type>FLOAT</value_type>
                     <units>eps</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.VHA6.broadcast_candidates']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - VHA6.broadcast_lowttl (skipped broadcasts: low TTL or grace / sec)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;VHA6.broadcast_lowttl&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <value_type>FLOAT</value_type>
                     <units>eps</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.VHA6.broadcast_lowttl']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - VHA6.broadcast_nocache (skipped broadcasts: uncacheable / sec)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;VHA6.broadcast_nocache&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <value_type>FLOAT</value_type>
                     <units>eps</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.VHA6.broadcast_nocache']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - VHA6.broadcast_skip (skipped broadcasts: skip / sec)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;VHA6.broadcast_skip&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <value_type>FLOAT</value_type>
                     <units>eps</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.VHA6.broadcast_skip']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - VHA6.broadcast_toolarge (skipped broadcasts: too large / sec)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;VHA6.broadcast_toolarge&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <value_type>FLOAT</value_type>
                     <units>eps</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.VHA6.broadcast_toolarge']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - VHA6.error_bad_token</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;VHA6.error_bad_token&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <value_type>FLOAT</value_type>
                     <units>eps</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.VHA6.error_bad_token']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - VHA6.error_fetch_insert</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;VHA6.error_fetch_insert&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <value_type>FLOAT</value_type>
                     <units>eps</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.VHA6.error_fetch_insert']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - VHA6.error_no_token</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;VHA6.error_no_token&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <value_type>FLOAT</value_type>
                     <units>eps</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.VHA6.error_no_token']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - VHA6.error_origin_mismatch</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;VHA6.error_origin_mismatch&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <value_type>FLOAT</value_type>
                     <units>eps</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.VHA6.error_origin_mismatch']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - VHA6.error_origin_miss</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;VHA6.error_origin_miss&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <value_type>FLOAT</value_type>
                     <units>eps</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.VHA6.error_origin_miss']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - VHA6.error_rate_limited</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;VHA6.error_rate_limited&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <value_type>FLOAT</value_type>
                     <units>eps</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.VHA6.error_rate_limited']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - VHA6.error_stale_token</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;VHA6.error_stale_token&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <value_type>FLOAT</value_type>
                     <units>eps</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.VHA6.error_stale_token']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - VHA6.error_version_mismatch</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;VHA6.error_version_mismatch&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <value_type>FLOAT</value_type>
                     <units>eps</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.VHA6.error_version_mismatch']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - VHA6.fetch_origin (replication requests / sec)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;VHA6.fetch_origin&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <value_type>FLOAT</value_type>
                     <units>eps</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.VHA6.fetch_origin']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - VHA6.fetch_origin_deliver (replication responses / sec)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;VHA6.fetch_origin_deliver&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <value_type>FLOAT</value_type>
                     <units>eps</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.VHA6.fetch_origin_deliver']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - VHA6.fetch_peer (peer replication notifications / sec)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;VHA6.fetch_peer&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <value_type>FLOAT</value_type>
                     <units>eps</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.VHA6.fetch_peer']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - VHA6.fetch_peer_insert (replication insertions / sec)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;VHA6.fetch_peer_insert&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <value_type>FLOAT</value_type>
                     <units>eps</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.VHA6.fetch_peer_insert']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - VHA6.fetch_self (self replication notifications / sec)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;VHA6.fetch_self&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <value_type>FLOAT</value_type>
                     <units>eps</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.VHA6.fetch_self']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - VMOD_HTTP.handle_abandon (abandoned HTTP requests / sec)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;VMOD_HTTP.handle_abandon&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <value_type>FLOAT</value_type>
                     <units>eps</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.VMOD_HTTP.handle_abandon']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - VMOD_HTTP.handle_completed (completed HTTP requests / sec)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;VMOD_HTTP.handle_completed&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <value_type>FLOAT</value_type>
                     <units>eps</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.VMOD_HTTP.handle_completed']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - VMOD_HTTP.handle_requests (HTTP requests / sec)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;VMOD_HTTP.handle_requests&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <value_type>FLOAT</value_type>
                     <units>eps</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.VMOD_HTTP.handle_requests']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - cache_hit_ratio</name>
                     <type>CALCULATED</type>
                     <key>varnish[&quot;{#LOCATION_ID}&quot;,&quot;cache_hit_ratio&quot;]</key>
                     <delay>{$VARNISH_CACHE.ITEM_UPDATE_INTERVAL}</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <value_type>FLOAT</value_type>
                     <units>%</units>
                     <params>100*last(&quot;varnish.stat[\&quot;{#LOCATION_ID}\&quot;,\&quot;MAIN.cache_hit\&quot;]&quot;)/(last(&quot;varnish.stat[\&quot;{#LOCATION_ID}\&quot;,\&quot;MAIN.cache_hit\&quot;]&quot;)+last(&quot;varnish.stat[\&quot;{#LOCATION_ID}\&quot;,\&quot;MAIN.cache_miss\&quot;]&quot;)+(count(&quot;varnish.stat[\&quot;{#LOCATION_ID}\&quot;,\&quot;MAIN.cache_hit\&quot;]&quot;,#1,0)*count(&quot;varnish.stat[\&quot;{#LOCATION_ID}\&quot;,\&quot;MAIN.cache_miss\&quot;]&quot;,#1,0)))</params>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                  </item_prototype>
               </item_prototypes>
               <trigger_prototypes>
                  <trigger_prototype>
                     <expression>{Template App Varnish Cache:varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.uptime&quot;].last()}&lt;{$VARNISH_CACHE.MAIN_UPTIME.MIN:&quot;{#LOCATION_ID}&quot;} or {Template App Varnish Cache:varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MGT.uptime&quot;].last()}&lt;{$VARNISH_CACHE.MGT_UPTIME.MIN:&quot;{#LOCATION_ID}&quot;}</expression>
                     <name>Varnish Cache[{#LOCATION}] has been restarted</name>
                     <priority>HIGH</priority>
                  </trigger_prototype>
                  <trigger_prototype>
                     <expression>{Template App Varnish Cache:varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.client_resp_500&quot;].last()}&gt;{$VARNISH_CACHE.WORKSPACE_OVERFLOWS_RATE.MAX:&quot;{#LOCATION_ID}&quot;} or {Template App Varnish Cache:varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.ws_backend_overflow&quot;].last()}&gt;{$VARNISH_CACHE.WORKSPACE_OVERFLOWS_RATE.MAX:&quot;{#LOCATION_ID}&quot;} or {Template App Varnish Cache:varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.ws_client_overflow&quot;].last()}&gt;{$VARNISH_CACHE.WORKSPACE_OVERFLOWS_RATE.MAX:&quot;{#LOCATION_ID}&quot;} or {Template App Varnish Cache:varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.ws_session_overflow&quot;].last()}&gt;{$VARNISH_CACHE.WORKSPACE_OVERFLOWS_RATE.MAX:&quot;{#LOCATION_ID}&quot;} or {Template App Varnish Cache:varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.ws_thread_overflow&quot;].last()}&gt;{$VARNISH_CACHE.WORKSPACE_OVERFLOWS_RATE.MAX:&quot;{#LOCATION_ID}&quot;}</expression>
                     <name>Varnish Cache[{#LOCATION}] is generating workspace overflows</name>
                     <priority>WARNING</priority>
                  </trigger_prototype>
               </trigger_prototypes>
               <graph_prototypes>
                  <graph_prototype>
                     <name>Varnish Cache[{#LOCATION}] &gt; Backends: connections activity</name>
                     <graph_items>
                        <graph_item>
                           <color>00C800</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.backend_recycle&quot;]</key>
                           </item>
                        </graph_item>
                        <graph_item>
                           <sortorder>1</sortorder>
                           <color>C80000</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.backend_reuse&quot;]</key>
                           </item>
                        </graph_item>
                        <graph_item>
                           <sortorder>2</sortorder>
                           <color>0000C8</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.backend_retry&quot;]</key>
                           </item>
                        </graph_item>
                        <graph_item>
                           <sortorder>3</sortorder>
                           <color>C800C8</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.backend_busy&quot;]</key>
                           </item>
                        </graph_item>
                        <graph_item>
                           <sortorder>4</sortorder>
                           <color>00C8C8</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.backend_unhealthy&quot;]</key>
                           </item>
                        </graph_item>
                        <graph_item>
                           <sortorder>5</sortorder>
                           <color>C8C800</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.backend_fail&quot;]</key>
                           </item>
                        </graph_item>
                     </graph_items>
                  </graph_prototype>
                  <graph_prototype>
                     <name>Varnish Cache[{#LOCATION}] &gt; Backends: connections rate</name>
                     <graph_items>
                        <graph_item>
                           <drawtype>FILLED_REGION</drawtype>
                           <color>00C800</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.backend_conn&quot;]</key>
                           </item>
                        </graph_item>
                     </graph_items>
                  </graph_prototype>
                  <graph_prototype>
                     <name>Varnish Cache[{#LOCATION}] &gt; Backends: fetches activity</name>
                     <graph_items>
                        <graph_item>
                           <color>00C800</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.s_fetch&quot;]</key>
                           </item>
                        </graph_item>
                        <graph_item>
                           <sortorder>1</sortorder>
                           <color>C80000</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.fetch_head&quot;]</key>
                           </item>
                        </graph_item>
                        <graph_item>
                           <sortorder>2</sortorder>
                           <color>0000C8</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.fetch_length&quot;]</key>
                           </item>
                        </graph_item>
                        <graph_item>
                           <sortorder>3</sortorder>
                           <color>C800C8</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.fetch_chunked&quot;]</key>
                           </item>
                        </graph_item>
                        <graph_item>
                           <sortorder>4</sortorder>
                           <color>00C8C8</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.fetch_eof&quot;]</key>
                           </item>
                        </graph_item>
                        <graph_item>
                           <sortorder>5</sortorder>
                           <color>C8C800</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.fetch_none&quot;]</key>
                           </item>
                        </graph_item>
                        <graph_item>
                           <sortorder>6</sortorder>
                           <color>C8C8C8</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.fetch_1xx&quot;]</key>
                           </item>
                        </graph_item>
                        <graph_item>
                           <sortorder>7</sortorder>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.fetch_204&quot;]</key>
                           </item>
                        </graph_item>
                        <graph_item>
                           <sortorder>8</sortorder>
                           <color>960000</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.fetch_304&quot;]</key>
                           </item>
                        </graph_item>
                        <graph_item>
                           <sortorder>9</sortorder>
                           <color>000096</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.fetch_bad&quot;]</key>
                           </item>
                        </graph_item>
                        <graph_item>
                           <sortorder>10</sortorder>
                           <color>960096</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.fetch_failed&quot;]</key>
                           </item>
                        </graph_item>
                        <graph_item>
                           <sortorder>11</sortorder>
                           <color>009696</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.fetch_no_thread&quot;]</key>
                           </item>
                        </graph_item>
                     </graph_items>
                  </graph_prototype>
                  <graph_prototype>
                     <name>Varnish Cache[{#LOCATION}] &gt; Backends: number</name>
                     <graph_items>
                        <graph_item>
                           <drawtype>FILLED_REGION</drawtype>
                           <color>00C800</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.n_backend&quot;]</key>
                           </item>
                        </graph_item>
                     </graph_items>
                  </graph_prototype>
                  <graph_prototype>
                     <name>Varnish Cache[{#LOCATION}] &gt; Backends: request rate</name>
                     <graph_items>
                        <graph_item>
                           <drawtype>FILLED_REGION</drawtype>
                           <color>00C800</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.backend_req&quot;]</key>
                           </item>
                        </graph_item>
                     </graph_items>
                  </graph_prototype>
                  <graph_prototype>
                     <name>Varnish Cache[{#LOCATION}] &gt; Cache</name>
                     <graph_items>
                        <graph_item>
                           <color>00C800</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.cache_hit&quot;]</key>
                           </item>
                        </graph_item>
                        <graph_item>
                           <sortorder>1</sortorder>
                           <color>C80000</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.cache_hit_grace&quot;]</key>
                           </item>
                        </graph_item>
                        <graph_item>
                           <sortorder>2</sortorder>
                           <color>0000C8</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.cache_hitpass&quot;]</key>
                           </item>
                        </graph_item>
                        <graph_item>
                           <sortorder>3</sortorder>
                           <color>C800C8</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.cache_hitmiss&quot;]</key>
                           </item>
                        </graph_item>
                        <graph_item>
                           <sortorder>4</sortorder>
                           <color>00C8C8</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.cache_miss&quot;]</key>
                           </item>
                        </graph_item>
                        <graph_item>
                           <sortorder>5</sortorder>
                           <drawtype>BOLD_LINE</drawtype>
                           <color>C8C800</color>
                           <yaxisside>RIGHT</yaxisside>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish[&quot;{#LOCATION_ID}&quot;,&quot;cache_hit_ratio&quot;]</key>
                           </item>
                        </graph_item>
                     </graph_items>
                  </graph_prototype>
                  <graph_prototype>
                     <name>Varnish Cache[{#LOCATION}] &gt; Client requests: activity</name>
                     <graph_items>
                        <graph_item>
                           <color>00C800</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.req_dropped&quot;]</key>
                           </item>
                        </graph_item>
                        <graph_item>
                           <sortorder>1</sortorder>
                           <color>C80000</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.client_req_400&quot;]</key>
                           </item>
                        </graph_item>
                        <graph_item>
                           <sortorder>2</sortorder>
                           <color>0000C8</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.client_req_417&quot;]</key>
                           </item>
                        </graph_item>
                     </graph_items>
                  </graph_prototype>
                  <graph_prototype>
                     <name>Varnish Cache[{#LOCATION}] &gt; Client requests: busy</name>
                     <graph_items>
                        <graph_item>
                           <color>00C800</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.busy_sleep&quot;]</key>
                           </item>
                        </graph_item>
                        <graph_item>
                           <sortorder>1</sortorder>
                           <color>0000C8</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.busy_wakeup&quot;]</key>
                           </item>
                        </graph_item>
                        <graph_item>
                           <sortorder>2</sortorder>
                           <color>C80000</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.busy_killed&quot;]</key>
                           </item>
                        </graph_item>
                     </graph_items>
                  </graph_prototype>
                  <graph_prototype>
                     <name>Varnish Cache[{#LOCATION}] &gt; Client requests: bytes received</name>
                     <type>STACKED</type>
                     <graph_items>
                        <graph_item>
                           <color>00C800</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.s_req_hdrbytes&quot;]</key>
                           </item>
                        </graph_item>
                        <graph_item>
                           <sortorder>1</sortorder>
                           <color>C80000</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.s_req_bodybytes&quot;]</key>
                           </item>
                        </graph_item>
                        <graph_item>
                           <sortorder>2</sortorder>
                           <color>0000C8</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.s_pipe_hdrbytes&quot;]</key>
                           </item>
                        </graph_item>
                        <graph_item>
                           <sortorder>3</sortorder>
                           <color>C800C8</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.s_pipe_in&quot;]</key>
                           </item>
                        </graph_item>
                     </graph_items>
                  </graph_prototype>
                  <graph_prototype>
                     <name>Varnish Cache[{#LOCATION}] &gt; Client requests: bytes sent</name>
                     <type>STACKED</type>
                     <graph_items>
                        <graph_item>
                           <color>00C800</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.s_resp_hdrbytes&quot;]</key>
                           </item>
                        </graph_item>
                        <graph_item>
                           <sortorder>1</sortorder>
                           <color>C80000</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.s_resp_bodybytes&quot;]</key>
                           </item>
                        </graph_item>
                        <graph_item>
                           <sortorder>2</sortorder>
                           <color>0000C8</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.s_pipe_out&quot;]</key>
                           </item>
                        </graph_item>
                     </graph_items>
                  </graph_prototype>
                  <graph_prototype>
                     <name>Varnish Cache[{#LOCATION}] &gt; Client requests: passes seen</name>
                     <graph_items>
                        <graph_item>
                           <drawtype>FILLED_REGION</drawtype>
                           <color>00C800</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.s_pass&quot;]</key>
                           </item>
                        </graph_item>
                     </graph_items>
                  </graph_prototype>
                  <graph_prototype>
                     <name>Varnish Cache[{#LOCATION}] &gt; Client requests: rate</name>
                     <graph_items>
                        <graph_item>
                           <drawtype>FILLED_REGION</drawtype>
                           <color>00C800</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.client_req&quot;]</key>
                           </item>
                        </graph_item>
                        <graph_item>
                           <sortorder>1</sortorder>
                           <drawtype>FILLED_REGION</drawtype>
                           <color>0000C8</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.s_req&quot;]</key>
                           </item>
                        </graph_item>
                     </graph_items>
                  </graph_prototype>
                  <graph_prototype>
                     <name>Varnish Cache[{#LOCATION}] &gt; Client requests: synthetic responses made</name>
                     <graph_items>
                        <graph_item>
                           <drawtype>FILLED_REGION</drawtype>
                           <color>00C800</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.s_synth&quot;]</key>
                           </item>
                        </graph_item>
                     </graph_items>
                  </graph_prototype>
                  <graph_prototype>
                     <name>Varnish Cache[{#LOCATION}] &gt; Client sessions: activity</name>
                     <graph_items>
                        <graph_item>
                           <color>00C800</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.s_sess&quot;]</key>
                           </item>
                        </graph_item>
                        <graph_item>
                           <sortorder>1</sortorder>
                           <color>C80000</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.sess_closed&quot;]</key>
                           </item>
                        </graph_item>
                        <graph_item>
                           <sortorder>2</sortorder>
                           <color>0000C8</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.sess_closed_err&quot;]</key>
                           </item>
                        </graph_item>
                        <graph_item>
                           <sortorder>3</sortorder>
                           <color>C800C8</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.sess_drop&quot;]</key>
                           </item>
                        </graph_item>
                        <graph_item>
                           <sortorder>4</sortorder>
                           <color>00C8C8</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.sess_dropped&quot;]</key>
                           </item>
                        </graph_item>
                        <graph_item>
                           <sortorder>5</sortorder>
                           <color>C8C800</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.sess_fail&quot;]</key>
                           </item>
                        </graph_item>
                        <graph_item>
                           <sortorder>6</sortorder>
                           <color>C8C8C8</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.sess_queued&quot;]</key>
                           </item>
                        </graph_item>
                        <graph_item>
                           <sortorder>7</sortorder>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.sess_readahead&quot;]</key>
                           </item>
                        </graph_item>
                     </graph_items>
                  </graph_prototype>
                  <graph_prototype>
                     <name>Varnish Cache[{#LOCATION}] &gt; Client sessions: failures</name>
                     <graph_items>
                        <graph_item>
                           <color>00C800</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.sess_fail_econnaborted&quot;]</key>
                           </item>
                        </graph_item>
                        <graph_item>
                           <sortorder>1</sortorder>
                           <color>C80000</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.sess_fail_eintr&quot;]</key>
                           </item>
                        </graph_item>
                        <graph_item>
                           <sortorder>2</sortorder>
                           <color>0000C8</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.sess_fail_emfile&quot;]</key>
                           </item>
                        </graph_item>
                        <graph_item>
                           <sortorder>3</sortorder>
                           <color>C800C8</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.sess_fail_ebadf&quot;]</key>
                           </item>
                        </graph_item>
                        <graph_item>
                           <sortorder>4</sortorder>
                           <color>00C8C8</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.sess_fail_enomem&quot;]</key>
                           </item>
                        </graph_item>
                        <graph_item>
                           <sortorder>5</sortorder>
                           <color>C8C800</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.sess_fail_other&quot;]</key>
                           </item>
                        </graph_item>
                     </graph_items>
                  </graph_prototype>
                  <graph_prototype>
                     <name>Varnish Cache[{#LOCATION}] &gt; Client sessions: pipes seen</name>
                     <graph_items>
                        <graph_item>
                           <drawtype>FILLED_REGION</drawtype>
                           <color>00C800</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.s_pipe&quot;]</key>
                           </item>
                        </graph_item>
                     </graph_items>
                  </graph_prototype>
                  <graph_prototype>
                     <name>Varnish Cache[{#LOCATION}] &gt; Client sessions: rate</name>
                     <graph_items>
                        <graph_item>
                           <drawtype>FILLED_REGION</drawtype>
                           <color>00C800</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.sess_conn&quot;]</key>
                           </item>
                        </graph_item>
                     </graph_items>
                  </graph_prototype>
                  <graph_prototype>
                     <name>Varnish Cache[{#LOCATION}] &gt; Client sessions: waiting for threads</name>
                     <graph_items>
                        <graph_item>
                           <drawtype>FILLED_REGION</drawtype>
                           <color>C80000</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.thread_queue_len&quot;]</key>
                           </item>
                        </graph_item>
                     </graph_items>
                  </graph_prototype>
                  <graph_prototype>
                     <name>Varnish Cache[{#LOCATION}] &gt; ESI: activity</name>
                     <graph_items>
                        <graph_item>
                           <color>00C800</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.esi_warnings&quot;]</key>
                           </item>
                        </graph_item>
                        <graph_item>
                           <sortorder>1</sortorder>
                           <color>C80000</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.esi_errors&quot;]</key>
                           </item>
                        </graph_item>
                        <graph_item>
                           <sortorder>2</sortorder>
                           <color>0000C8</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.esi_maxdepth&quot;]</key>
                           </item>
                        </graph_item>
                     </graph_items>
                  </graph_prototype>
                  <graph_prototype>
                     <name>Varnish Cache[{#LOCATION}] &gt; Gzip: activity</name>
                     <graph_items>
                        <graph_item>
                           <color>00C800</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.n_gzip&quot;]</key>
                           </item>
                        </graph_item>
                        <graph_item>
                           <sortorder>1</sortorder>
                           <color>C80000</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.n_gunzip&quot;]</key>
                           </item>
                        </graph_item>
                        <graph_item>
                           <sortorder>2</sortorder>
                           <color>0000C8</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.n_test_gunzip&quot;]</key>
                           </item>
                        </graph_item>
                     </graph_items>
                  </graph_prototype>
                  <graph_prototype>
                     <name>Varnish Cache[{#LOCATION}] &gt; HTTP header overflows</name>
                     <graph_items>
                        <graph_item>
                           <drawtype>FILLED_REGION</drawtype>
                           <color>C80000</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.losthdr&quot;]</key>
                           </item>
                        </graph_item>
                     </graph_items>
                  </graph_prototype>
                  <graph_prototype>
                     <name>Varnish Cache[{#LOCATION}] &gt; Memory</name>
                     <graph_items>
                        <graph_item>
                           <color>00C800</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MEMORY.size&quot;]</key>
                           </item>
                        </graph_item>
                        <graph_item>
                           <sortorder>1</sortorder>
                           <color>C80000</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MEMORY.resident&quot;]</key>
                           </item>
                        </graph_item>
                        <graph_item>
                           <sortorder>2</sortorder>
                           <color>0000C8</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MEMORY.shared&quot;]</key>
                           </item>
                        </graph_item>
                        <graph_item>
                           <sortorder>3</sortorder>
                           <color>C800C8</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MEMORY.text&quot;]</key>
                           </item>
                        </graph_item>
                        <graph_item>
                           <sortorder>4</sortorder>
                           <color>00C8C8</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MEMORY.data&quot;]</key>
                           </item>
                        </graph_item>
                        <graph_item>
                           <sortorder>5</sortorder>
                           <color>C8C800</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MEMORY.swap&quot;]</key>
                           </item>
                        </graph_item>
                     </graph_items>
                  </graph_prototype>
                  <graph_prototype>
                     <name>Varnish Cache[{#LOCATION}] &gt; Objects: bans</name>
                     <graph_items>
                        <graph_item>
                           <drawtype>FILLED_REGION</drawtype>
                           <color>00C800</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.bans&quot;]</key>
                           </item>
                        </graph_item>
                     </graph_items>
                  </graph_prototype>
                  <graph_prototype>
                     <name>Varnish Cache[{#LOCATION}] &gt; Objects: nuke limit overflows</name>
                     <graph_items>
                        <graph_item>
                           <drawtype>FILLED_REGION</drawtype>
                           <color>C80000</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.n_lru_limited&quot;]</key>
                           </item>
                        </graph_item>
                     </graph_items>
                  </graph_prototype>
                  <graph_prototype>
                     <name>Varnish Cache[{#LOCATION}] &gt; Objects: purges</name>
                     <graph_items>
                        <graph_item>
                           <drawtype>FILLED_REGION</drawtype>
                           <color>00C800</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.n_purges&quot;]</key>
                           </item>
                        </graph_item>
                     </graph_items>
                  </graph_prototype>
                  <graph_prototype>
                     <name>Varnish Cache[{#LOCATION}] &gt; Objects: removals</name>
                     <graph_items>
                        <graph_item>
                           <color>00C800</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.n_expired&quot;]</key>
                           </item>
                        </graph_item>
                        <graph_item>
                           <sortorder>1</sortorder>
                           <color>C80000</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.n_lru_nuked&quot;]</key>
                           </item>
                        </graph_item>
                        <graph_item>
                           <sortorder>2</sortorder>
                           <color>0000C8</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.n_lru_moved&quot;]</key>
                           </item>
                        </graph_item>
                        <graph_item>
                           <sortorder>3</sortorder>
                           <color>C800C8</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.n_obj_purged&quot;]</key>
                           </item>
                        </graph_item>
                        <graph_item>
                           <sortorder>4</sortorder>
                           <color>00C8C8</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.bans_obj_killed&quot;]</key>
                           </item>
                        </graph_item>
                        <graph_item>
                           <sortorder>5</sortorder>
                           <color>C8C800</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.bans_lurker_obj_killed&quot;]</key>
                           </item>
                        </graph_item>
                        <graph_item>
                           <sortorder>6</sortorder>
                           <color>C8C8C8</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.bans_lurker_obj_killed_cutoff&quot;]</key>
                           </item>
                        </graph_item>
                     </graph_items>
                  </graph_prototype>
                  <graph_prototype>
                     <name>Varnish Cache[{#LOCATION}] &gt; Objects: stored</name>
                     <graph_items>
                        <graph_item>
                           <color>00C800</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.n_object&quot;]</key>
                           </item>
                        </graph_item>
                        <graph_item>
                           <sortorder>1</sortorder>
                           <color>C80000</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.n_objecthead&quot;]</key>
                           </item>
                        </graph_item>
                        <graph_item>
                           <sortorder>2</sortorder>
                           <color>0000C8</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.n_objectcore&quot;]</key>
                           </item>
                        </graph_item>
                     </graph_items>
                  </graph_prototype>
                  <graph_prototype>
                     <name>Varnish Cache[{#LOCATION}] &gt; Threads: activity</name>
                     <graph_items>
                        <graph_item>
                           <color>00C800</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.threads_created&quot;]</key>
                           </item>
                        </graph_item>
                        <graph_item>
                           <sortorder>1</sortorder>
                           <color>C80000</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.threads_failed&quot;]</key>
                           </item>
                        </graph_item>
                        <graph_item>
                           <sortorder>2</sortorder>
                           <color>0000C8</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.threads_limited&quot;]</key>
                           </item>
                        </graph_item>
                        <graph_item>
                           <sortorder>3</sortorder>
                           <color>C800C8</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.threads_destroyed&quot;]</key>
                           </item>
                        </graph_item>
                     </graph_items>
                  </graph_prototype>
                  <graph_prototype>
                     <name>Varnish Cache[{#LOCATION}] &gt; Threads: number</name>
                     <graph_items>
                        <graph_item>
                           <drawtype>FILLED_REGION</drawtype>
                           <color>00C800</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.threads&quot;]</key>
                           </item>
                        </graph_item>
                     </graph_items>
                  </graph_prototype>
                  <graph_prototype>
                     <name>Varnish Cache[{#LOCATION}] &gt; Uptime</name>
                     <graph_items>
                        <graph_item>
                           <color>00C800</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MGT.uptime&quot;]</key>
                           </item>
                        </graph_item>
                        <graph_item>
                           <sortorder>1</sortorder>
                           <color>C80000</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.uptime&quot;]</key>
                           </item>
                        </graph_item>
                     </graph_items>
                  </graph_prototype>
                  <graph_prototype>
                     <name>Varnish Cache[{#LOCATION}] &gt; VCLs: failures</name>
                     <graph_items>
                        <graph_item>
                           <drawtype>FILLED_REGION</drawtype>
                           <color>00C800</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.sc_vcl_failure&quot;]</key>
                           </item>
                        </graph_item>
                        <graph_item>
                           <sortorder>1</sortorder>
                           <drawtype>FILLED_REGION</drawtype>
                           <color>C80000</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.vcl_fail&quot;]</key>
                           </item>
                        </graph_item>
                     </graph_items>
                  </graph_prototype>
                  <graph_prototype>
                     <name>Varnish Cache[{#LOCATION}] &gt; VCLs: number</name>
                     <graph_items>
                        <graph_item>
                           <drawtype>FILLED_REGION</drawtype>
                           <color>00C800</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.n_vcl&quot;]</key>
                           </item>
                        </graph_item>
                     </graph_items>
                  </graph_prototype>
                  <graph_prototype>
                     <name>Varnish Cache[{#LOCATION}] &gt; VHA: broadcasts</name>
                     <graph_items>
                        <graph_item>
                           <color>00C800</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;VHA6.broadcast_candidates&quot;]</key>
                           </item>
                        </graph_item>
                        <graph_item>
                           <sortorder>1</sortorder>
                           <color>C80000</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;VHA6.broadcast_nocache&quot;]</key>
                           </item>
                        </graph_item>
                        <graph_item>
                           <sortorder>2</sortorder>
                           <color>0000C8</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;VHA6.broadcast_skip&quot;]</key>
                           </item>
                        </graph_item>
                        <graph_item>
                           <sortorder>3</sortorder>
                           <color>C800C8</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;VHA6.broadcast_lowttl&quot;]</key>
                           </item>
                        </graph_item>
                        <graph_item>
                           <sortorder>4</sortorder>
                           <color>00C8C8</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;VHA6.broadcast_toolarge&quot;]</key>
                           </item>
                        </graph_item>
                        <graph_item>
                           <sortorder>5</sortorder>
                           <color>C8C800</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;VHA6.broadcasts&quot;]</key>
                           </item>
                        </graph_item>
                     </graph_items>
                  </graph_prototype>
                  <graph_prototype>
                     <name>Varnish Cache[{#LOCATION}] &gt; VHA: errors</name>
                     <graph_items>
                        <graph_item>
                           <color>00C800</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;VHA6.error_version_mismatch&quot;]</key>
                           </item>
                        </graph_item>
                        <graph_item>
                           <sortorder>1</sortorder>
                           <color>C80000</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;VHA6.error_no_token&quot;]</key>
                           </item>
                        </graph_item>
                        <graph_item>
                           <sortorder>2</sortorder>
                           <color>0000C8</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;VHA6.error_bad_token&quot;]</key>
                           </item>
                        </graph_item>
                        <graph_item>
                           <sortorder>3</sortorder>
                           <color>C800C8</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;VHA6.error_stale_token&quot;]</key>
                           </item>
                        </graph_item>
                        <graph_item>
                           <sortorder>4</sortorder>
                           <color>00C8C8</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;VHA6.error_rate_limited&quot;]</key>
                           </item>
                        </graph_item>
                        <graph_item>
                           <sortorder>5</sortorder>
                           <color>C8C800</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;VHA6.error_fetch_insert&quot;]</key>
                           </item>
                        </graph_item>
                        <graph_item>
                           <sortorder>6</sortorder>
                           <color>C8C8C8</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;VHA6.error_origin_mismatch&quot;]</key>
                           </item>
                        </graph_item>
                        <graph_item>
                           <sortorder>7</sortorder>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;VHA6.error_origin_miss&quot;]</key>
                           </item>
                        </graph_item>
                     </graph_items>
                  </graph_prototype>
                  <graph_prototype>
                     <name>Varnish Cache[{#LOCATION}] &gt; VHA: replications</name>
                     <graph_items>
                        <graph_item>
                           <color>00C800</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;VHA6.fetch_self&quot;]</key>
                           </item>
                        </graph_item>
                        <graph_item>
                           <sortorder>1</sortorder>
                           <color>C80000</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;VHA6.fetch_peer&quot;]</key>
                           </item>
                        </graph_item>
                        <graph_item>
                           <sortorder>2</sortorder>
                           <color>0000C8</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;VHA6.fetch_origin&quot;]</key>
                           </item>
                        </graph_item>
                        <graph_item>
                           <sortorder>3</sortorder>
                           <color>C800C8</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;VHA6.fetch_origin_deliver&quot;]</key>
                           </item>
                        </graph_item>
                        <graph_item>
                           <sortorder>4</sortorder>
                           <color>00C8C8</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;VHA6.fetch_peer_insert&quot;]</key>
                           </item>
                        </graph_item>
                     </graph_items>
                  </graph_prototype>
                  <graph_prototype>
                     <name>Varnish Cache[{#LOCATION}] &gt; VMODs: goto</name>
                     <graph_items>
                        <graph_item>
                           <color>C80000</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.goto_dns_cache_hits&quot;]</key>
                           </item>
                        </graph_item>
                        <graph_item>
                           <sortorder>1</sortorder>
                           <color>00C800</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.goto_dns_lookup_fails&quot;]</key>
                           </item>
                        </graph_item>
                        <graph_item>
                           <sortorder>2</sortorder>
                           <color>0000C8</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.goto_dns_lookups&quot;]</key>
                           </item>
                        </graph_item>
                     </graph_items>
                  </graph_prototype>
                  <graph_prototype>
                     <name>Varnish Cache[{#LOCATION}] &gt; VMODs: http</name>
                     <graph_items>
                        <graph_item>
                           <color>C80000</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;VMOD_HTTP.handle_requests&quot;]</key>
                           </item>
                        </graph_item>
                        <graph_item>
                           <sortorder>1</sortorder>
                           <color>00C800</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;VMOD_HTTP.handle_completed&quot;]</key>
                           </item>
                        </graph_item>
                        <graph_item>
                           <sortorder>2</sortorder>
                           <color>0000C8</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;VMOD_HTTP.handle_abandon&quot;]</key>
                           </item>
                        </graph_item>
                     </graph_items>
                  </graph_prototype>
                  <graph_prototype>
                     <name>Varnish Cache[{#LOCATION}] &gt; VMODs: number</name>
                     <graph_items>
                        <graph_item>
                           <drawtype>FILLED_REGION</drawtype>
                           <color>00C800</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.vmods&quot;]</key>
                           </item>
                        </graph_item>
                     </graph_items>
                  </graph_prototype>
                  <graph_prototype>
                     <name>Varnish Cache[{#LOCATION}] &gt; Workspace overflows</name>
                     <graph_items>
                        <graph_item>
                           <color>C80000</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.client_resp_500&quot;]</key>
                           </item>
                        </graph_item>
                        <graph_item>
                           <sortorder>1</sortorder>
                           <color>00C800</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.ws_backend_overflow&quot;]</key>
                           </item>
                        </graph_item>
                        <graph_item>
                           <sortorder>2</sortorder>
                           <color>0000C8</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.ws_client_overflow&quot;]</key>
                           </item>
                        </graph_item>
                        <graph_item>
                           <sortorder>3</sortorder>
                           <color>C800C8</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.ws_session_overflow&quot;]</key>
                           </item>
                        </graph_item>
                        <graph_item>
                           <sortorder>4</sortorder>
                           <color>00C8C8</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MAIN.ws_thread_overflow&quot;]</key>
                           </item>
                        </graph_item>
                     </graph_items>
                  </graph_prototype>
               </graph_prototypes>
            </discovery_rule>
            <discovery_rule>
               <name>MSE books discovery</name>
               <type>ZABBIX_ACTIVE</type>
               <key>varnish.discovery[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;,&quot;mse_books&quot;]</key>
               <delay>{$VARNISH_CACHE.LLD_UPDATE_INTERVAL:&quot;mse_books&quot;}</delay>
               <lifetime>{$VARNISH_CACHE.LLD_KEEP_LOST_RESOURCES_PERIOD:&quot;mse_books&quot;}</lifetime>
               <item_prototypes>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - MSE_BOOK.{#SUBJECT}.c_insert_timeout (number of times database object insertion timed out / sec)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MSE_BOOK.{#SUBJECT_ID}.c_insert_timeout&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <value_type>FLOAT</value_type>
                     <units>eps</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.MSE_BOOK.{#SUBJECT_ID}.c_insert_timeout']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - MSE_BOOK.{#SUBJECT}.c_waterlevel_purge (number of objects purged to achieve database waterlevel / sec)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MSE_BOOK.{#SUBJECT_ID}.c_waterlevel_purge&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <value_type>FLOAT</value_type>
                     <units>eps</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.MSE_BOOK.{#SUBJECT_ID}.c_waterlevel_purge']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - MSE_BOOK.{#SUBJECT}.c_waterlevel_queue (number of times a thread has been queued waiting for database space / sec)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MSE_BOOK.{#SUBJECT_ID}.c_waterlevel_queue&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <value_type>FLOAT</value_type>
                     <units>eps</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.MSE_BOOK.{#SUBJECT_ID}.c_waterlevel_queue']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - MSE_BOOK.{#SUBJECT}.c_waterlevel_runs (number of times the waterlevel purge thread was activated / sec)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MSE_BOOK.{#SUBJECT_ID}.c_waterlevel_runs&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <value_type>FLOAT</value_type>
                     <units>eps</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.MSE_BOOK.{#SUBJECT_ID}.c_waterlevel_runs']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - MSE_BOOK.{#SUBJECT}.g_banlist_bytes (number of bytes used from the banlist journal file)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MSE_BOOK.{#SUBJECT_ID}.g_banlist_bytes&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <units>B</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.MSE_BOOK.{#SUBJECT_ID}.g_banlist_bytes']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - MSE_BOOK.{#SUBJECT}.g_banlist_space (number of bytes available in the banlist journal file)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MSE_BOOK.{#SUBJECT_ID}.g_banlist_space&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <units>B</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.MSE_BOOK.{#SUBJECT_ID}.g_banlist_space']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - MSE_BOOK.{#SUBJECT}.g_bytes (number of bytes used in the book database)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MSE_BOOK.{#SUBJECT_ID}.g_bytes&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <units>B</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.MSE_BOOK.{#SUBJECT_ID}.g_bytes']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - MSE_BOOK.{#SUBJECT}.g_space (number of bytes available in the book database)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MSE_BOOK.{#SUBJECT_ID}.g_space&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <units>B</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.MSE_BOOK.{#SUBJECT_ID}.g_space']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                     <trigger_prototypes>
                        <trigger_prototype>
                           <expression>{last()}&lt;{$VARNISH_CACHE.MSE_BOOK_SPACE.MIN:&quot;{#LOCATION_ID}:{#SUBJECT_ID}&quot;}</expression>
                           <recovery_mode>RECOVERY_EXPRESSION</recovery_mode>
                           <recovery_expression>{last()}&gt;{$VARNISH_CACHE.MSE_BOOK_SPACE.RECOVERY.MIN:&quot;{#LOCATION_ID}:{#SUBJECT_ID}&quot;}</recovery_expression>
                           <name>Varnish Cache[{#LOCATION}] {#SUBJECT} MSE book is running out of space</name>
                           <priority>WARNING</priority>
                        </trigger_prototype>
                     </trigger_prototypes>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - MSE_BOOK.{#SUBJECT}.n_vary (number of Vary header keys / sec)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MSE_BOOK.{#SUBJECT_ID}.n_vary&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <value_type>FLOAT</value_type>
                     <units>eps</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.MSE_BOOK.{#SUBJECT_ID}.n_vary']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
               </item_prototypes>
               <graph_prototypes>
                  <graph_prototype>
                     <name>Varnish Cache[{#LOCATION}] &gt; MSE books[{#SUBJECT}]: banlist journal file bytes outstanding vs. available</name>
                     <graph_items>
                        <graph_item>
                           <color>C80000</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MSE_BOOK.{#SUBJECT_ID}.g_banlist_bytes&quot;]</key>
                           </item>
                        </graph_item>
                        <graph_item>
                           <sortorder>1</sortorder>
                           <color>00C800</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MSE_BOOK.{#SUBJECT_ID}.g_banlist_space&quot;]</key>
                           </item>
                        </graph_item>
                     </graph_items>
                  </graph_prototype>
                  <graph_prototype>
                     <name>Varnish Cache[{#LOCATION}] &gt; MSE books[{#SUBJECT}]: bytes outstanding vs. available</name>
                     <type>STACKED</type>
                     <graph_items>
                        <graph_item>
                           <color>C80000</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MSE_BOOK.{#SUBJECT_ID}.g_bytes&quot;]</key>
                           </item>
                        </graph_item>
                        <graph_item>
                           <sortorder>1</sortorder>
                           <color>00C800</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MSE_BOOK.{#SUBJECT_ID}.g_space&quot;]</key>
                           </item>
                        </graph_item>
                     </graph_items>
                  </graph_prototype>
                  <graph_prototype>
                     <name>Varnish Cache[{#LOCATION}] &gt; MSE books[{#SUBJECT}]: timed out DB insertions</name>
                     <graph_items>
                        <graph_item>
                           <color>C80000</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MSE_BOOK.{#SUBJECT_ID}.c_insert_timeout&quot;]</key>
                           </item>
                        </graph_item>
                     </graph_items>
                  </graph_prototype>
                  <graph_prototype>
                     <name>Varnish Cache[{#LOCATION}] &gt; MSE books[{#SUBJECT}]: vary headers</name>
                     <graph_items>
                        <graph_item>
                           <color>00C800</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MSE_BOOK.{#SUBJECT_ID}.n_vary&quot;]</key>
                           </item>
                        </graph_item>
                     </graph_items>
                  </graph_prototype>
                  <graph_prototype>
                     <name>Varnish Cache[{#LOCATION}] &gt; MSE books[{#SUBJECT}]: waterlevel</name>
                     <graph_items>
                        <graph_item>
                           <color>0000C8</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MSE_BOOK.{#SUBJECT_ID}.c_waterlevel_queue&quot;]</key>
                           </item>
                        </graph_item>
                        <graph_item>
                           <sortorder>1</sortorder>
                           <color>00C800</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MSE_BOOK.{#SUBJECT_ID}.c_waterlevel_runs&quot;]</key>
                           </item>
                        </graph_item>
                        <graph_item>
                           <sortorder>2</sortorder>
                           <color>C80000</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MSE_BOOK.{#SUBJECT_ID}.c_waterlevel_purge&quot;]</key>
                           </item>
                        </graph_item>
                     </graph_items>
                  </graph_prototype>
               </graph_prototypes>
            </discovery_rule>
            <discovery_rule>
               <name>MSE stores discovery</name>
               <type>ZABBIX_ACTIVE</type>
               <key>varnish.discovery[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;,&quot;mse_stores&quot;]</key>
               <delay>{$VARNISH_CACHE.LLD_UPDATE_INTERVAL:&quot;mse_stores&quot;}</delay>
               <lifetime>{$VARNISH_CACHE.LLD_KEEP_LOST_RESOURCES_PERIOD:&quot;mse_stores&quot;}</lifetime>
               <item_prototypes>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - MSE_STORE.{#SUBJECT}.c_aio_finished_bytes_read (number AIO read bytes executed / sec)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MSE_STORE.{#SUBJECT_ID}.c_aio_finished_bytes_read&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <value_type>FLOAT</value_type>
                     <units>Bps</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.MSE_STORE.{#SUBJECT_ID}.c_aio_finished_bytes_read']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - MSE_STORE.{#SUBJECT}.c_aio_finished_bytes_write (number AIO write bytes executed / sec)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MSE_STORE.{#SUBJECT_ID}.c_aio_finished_bytes_write&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <value_type>FLOAT</value_type>
                     <units>Bps</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.MSE_STORE.{#SUBJECT_ID}.c_aio_finished_bytes_write']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - MSE_STORE.{#SUBJECT}.c_aio_finished_read (number AIO read operations executed / sec)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MSE_STORE.{#SUBJECT_ID}.c_aio_finished_read&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <value_type>FLOAT</value_type>
                     <units>eps</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.MSE_STORE.{#SUBJECT_ID}.c_aio_finished_read']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - MSE_STORE.{#SUBJECT}.c_aio_finished_write (number AIO write operations executed / sec)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MSE_STORE.{#SUBJECT_ID}.c_aio_finished_write&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <value_type>FLOAT</value_type>
                     <units>eps</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.MSE_STORE.{#SUBJECT_ID}.c_aio_finished_write']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - MSE_STORE.{#SUBJECT}.c_waterlevel_purge (number of objects purged to achieve store waterlevel / sec)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MSE_STORE.{#SUBJECT_ID}.c_waterlevel_purge&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <value_type>FLOAT</value_type>
                     <units>eps</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.MSE_STORE.{#SUBJECT_ID}.c_waterlevel_purge']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - MSE_STORE.{#SUBJECT}.c_waterlevel_queue (number of times a thread has been queued waiting for store space / sec)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MSE_STORE.{#SUBJECT_ID}.c_waterlevel_queue&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <value_type>FLOAT</value_type>
                     <units>eps</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.MSE_STORE.{#SUBJECT_ID}.c_waterlevel_queue']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - MSE_STORE.{#SUBJECT}.g_alloc_bytes (total number of bytes in allocation extents)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MSE_STORE.{#SUBJECT_ID}.g_alloc_bytes&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <units>B</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.MSE_STORE.{#SUBJECT_ID}.g_alloc_bytes']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - MSE_STORE.{#SUBJECT}.g_free_bytes (total number of bytes in free extents)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MSE_STORE.{#SUBJECT_ID}.g_free_bytes&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <units>B</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.MSE_STORE.{#SUBJECT_ID}.g_free_bytes']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - MSE_STORE.{#SUBJECT}.g_objects (number of objects in the store)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MSE_STORE.{#SUBJECT_ID}.g_objects&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.MSE_STORE.{#SUBJECT_ID}.g_objects']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - MSE_STORE.{#SUBJECT}.g_ykey_keys (number of YKeys registered in the store)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MSE_STORE.{#SUBJECT_ID}.g_ykey_keys&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.MSE_STORE.{#SUBJECT_ID}.g_ykey_keys']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
               </item_prototypes>
               <graph_prototypes>
                  <graph_prototype>
                     <name>Varnish Cache[{#LOCATION}] &gt; MSE stores[{#SUBJECT}]: AIO bytes read/written</name>
                     <graph_items>
                        <graph_item>
                           <color>00C800</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MSE_STORE.{#SUBJECT_ID}.c_aio_finished_bytes_read&quot;]</key>
                           </item>
                        </graph_item>
                        <graph_item>
                           <sortorder>1</sortorder>
                           <color>0000C8</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MSE_STORE.{#SUBJECT_ID}.c_aio_finished_bytes_write&quot;]</key>
                           </item>
                        </graph_item>
                     </graph_items>
                  </graph_prototype>
                  <graph_prototype>
                     <name>Varnish Cache[{#LOCATION}] &gt; MSE stores[{#SUBJECT}]: AIO operations</name>
                     <graph_items>
                        <graph_item>
                           <color>00C800</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MSE_STORE.{#SUBJECT_ID}.c_aio_finished_read&quot;]</key>
                           </item>
                        </graph_item>
                        <graph_item>
                           <sortorder>1</sortorder>
                           <color>0000C8</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MSE_STORE.{#SUBJECT_ID}.c_aio_finished_write&quot;]</key>
                           </item>
                        </graph_item>
                     </graph_items>
                  </graph_prototype>
                  <graph_prototype>
                     <name>Varnish Cache[{#LOCATION}] &gt; MSE stores[{#SUBJECT}]: extents</name>
                     <type>STACKED</type>
                     <graph_items>
                        <graph_item>
                           <color>C80000</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MSE_STORE.{#SUBJECT_ID}.g_alloc_bytes&quot;]</key>
                           </item>
                        </graph_item>
                        <graph_item>
                           <sortorder>1</sortorder>
                           <color>00C800</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MSE_STORE.{#SUBJECT_ID}.g_free_bytes&quot;]</key>
                           </item>
                        </graph_item>
                     </graph_items>
                  </graph_prototype>
                  <graph_prototype>
                     <name>Varnish Cache[{#LOCATION}] &gt; MSE stores[{#SUBJECT}]: objects</name>
                     <type>STACKED</type>
                     <graph_items>
                        <graph_item>
                           <color>00C800</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MSE_STORE.{#SUBJECT_ID}.g_objects&quot;]</key>
                           </item>
                        </graph_item>
                     </graph_items>
                  </graph_prototype>
                  <graph_prototype>
                     <name>Varnish Cache[{#LOCATION}] &gt; MSE stores[{#SUBJECT}]: waterlevel</name>
                     <graph_items>
                        <graph_item>
                           <color>0000C8</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MSE_STORE.{#SUBJECT_ID}.c_waterlevel_queue&quot;]</key>
                           </item>
                        </graph_item>
                        <graph_item>
                           <sortorder>1</sortorder>
                           <color>C80000</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MSE_STORE.{#SUBJECT_ID}.c_waterlevel_purge&quot;]</key>
                           </item>
                        </graph_item>
                     </graph_items>
                  </graph_prototype>
                  <graph_prototype>
                     <name>Varnish Cache[{#LOCATION}] &gt; MSE stores[{#SUBJECT}]: YKeys</name>
                     <type>STACKED</type>
                     <graph_items>
                        <graph_item>
                           <color>00C800</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;MSE_STORE.{#SUBJECT_ID}.g_ykey_keys&quot;]</key>
                           </item>
                        </graph_item>
                     </graph_items>
                  </graph_prototype>
               </graph_prototypes>
            </discovery_rule>
            <discovery_rule>
               <name>Storages discovery</name>
               <type>ZABBIX_ACTIVE</type>
               <key>varnish.discovery[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;,&quot;storages&quot;]</key>
               <delay>{$VARNISH_CACHE.LLD_UPDATE_INTERVAL:&quot;storages&quot;}</delay>
               <lifetime>{$VARNISH_CACHE.LLD_KEEP_LOST_RESOURCES_PERIOD:&quot;storages&quot;}</lifetime>
               <item_prototypes>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - STG.{#SUBJECT}.c_fail (allocator failures / sec)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;STG.{#SUBJECT_ID}.c_fail&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <value_type>FLOAT</value_type>
                     <units>eps</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.STG.{#SUBJECT_ID}.c_fail']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                     <trigger_prototypes>
                        <trigger_prototype>
                           <expression>{last()}&gt;{$VARNISH_CACHE.ALLOCATOR_FAILURES_RATE.MAX:&quot;{#LOCATION_ID}:{#SUBJECT_ID}&quot;}</expression>
                           <recovery_mode>RECOVERY_EXPRESSION</recovery_mode>
                           <recovery_expression>{max({$VARNISH_CACHE.ALLOCATOR_FAILURES_RATE.RECOVERY.SAMPLES:&quot;{#LOCATION_ID}:{#SUBJECT_ID}&quot;})}&lt;={$VARNISH_CACHE.ALLOCATOR_FAILURES_RATE.MAX:&quot;{#LOCATION_ID}:{#SUBJECT_ID}&quot;}</recovery_expression>
                           <name>Varnish Cache[{#LOCATION}] {#SUBJECT} storage failed to allocate space</name>
                           <priority>HIGH</priority>
                        </trigger_prototype>
                     </trigger_prototypes>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - STG.{#SUBJECT}.c_memcache_hit (stored objects cache hits bytes / sec)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;STG.{#SUBJECT_ID}.c_memcache_hit&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <value_type>FLOAT</value_type>
                     <units>Bps</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.STG.{#SUBJECT_ID}.c_memcache_hit']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - STG.{#SUBJECT}.c_memcache_miss (stored objects cache misses bytes / sec)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;STG.{#SUBJECT_ID}.c_memcache_miss&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <value_type>FLOAT</value_type>
                     <units>Bps</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.STG.{#SUBJECT_ID}.c_memcache_miss']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - STG.{#SUBJECT}.g_bytes (bytes outstanding)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;STG.{#SUBJECT_ID}.g_bytes&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <units>B</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.STG.{#SUBJECT_ID}.g_bytes']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - STG.{#SUBJECT}.g_space (bytes available)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;STG.{#SUBJECT_ID}.g_space&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <units>B</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.STG.{#SUBJECT_ID}.g_space']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - STG.{#SUBJECT}.g_sparenode (spare nodes available)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;STG.{#SUBJECT_ID}.g_sparenode&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.STG.{#SUBJECT_ID}.g_sparenode']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                     <trigger_prototypes>
                        <trigger_prototype>
                           <expression>{last()}&lt;{$VARNISH_CACHE.SPARE_NODES.MIN:&quot;{#LOCATION_ID}:{#SUBJECT_ID}&quot;}</expression>
                           <recovery_mode>RECOVERY_EXPRESSION</recovery_mode>
                           <recovery_expression>{last()}&gt;{$VARNISH_CACHE.SPARE_NODES.RECOVERY.MIN:&quot;{#LOCATION_ID}:{#SUBJECT_ID}&quot;}</recovery_expression>
                           <name>Varnish Cache[{#LOCATION}] {#SUBJECT} storage is running out of spare nodes</name>
                           <priority>WARNING</priority>
                        </trigger_prototype>
                     </trigger_prototypes>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - STG.{#SUBJECT}.g_ykey_keys (number of YKeys registered)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;STG.{#SUBJECT_ID}.g_ykey_keys&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.STG.{#SUBJECT_ID}.g_ykey_keys']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - STG.{#SUBJECT}.n_lru_moved (number of LRU move operations / sec)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;STG.{#SUBJECT_ID}.n_lru_moved&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <value_type>FLOAT</value_type>
                     <units>eps</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.STG.{#SUBJECT_ID}.n_lru_moved']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - STG.{#SUBJECT}.n_lru_nuked (number of LRU nuked objects / sec)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;STG.{#SUBJECT_ID}.n_lru_nuked&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <value_type>FLOAT</value_type>
                     <units>eps</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.STG.{#SUBJECT_ID}.n_lru_nuked']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - STG.{#SUBJECT}.n_vary (number of Vary header keys / sec)</name>
                     <type>DEPENDENT</type>
                     <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;STG.{#SUBJECT_ID}.n_vary&quot;]</key>
                     <delay>0</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <value_type>FLOAT</value_type>
                     <units>eps</units>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                     <preprocessing>
                        <step>
                           <type>JSONPATH</type>
                           <params>$['{#LOCATION_ID}.STG.{#SUBJECT_ID}.n_vary']</params>
                           <error_handler>DISCARD_VALUE</error_handler>
                        </step>
                        <step>
                           <type>CHANGE_PER_SECOND</type>
                           <params/>
                        </step>
                     </preprocessing>
                     <master_item>
                        <key>varnish.stats[&quot;{$VARNISH_CACHE.LOCATIONS}&quot;]</key>
                     </master_item>
                  </item_prototype>
                  <item_prototype>
                     <name>Varnish Cache[{#LOCATION}] - STG.{#SUBJECT}.cache_hit_ratio</name>
                     <type>CALCULATED</type>
                     <key>varnish[&quot;{#LOCATION_ID}&quot;,&quot;STG.{#SUBJECT_ID}.cache_hit_ratio&quot;]</key>
                     <delay>{$VARNISH_CACHE.ITEM_UPDATE_INTERVAL}</delay>
                     <history>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</history>
                     <trends>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</trends>
                     <value_type>FLOAT</value_type>
                     <units>%</units>
                     <params>100*last(&quot;varnish.stat[\&quot;{#LOCATION_ID}\&quot;,\&quot;STG.{#SUBJECT_ID}.c_memcache_hit\&quot;]&quot;)/(last(&quot;varnish.stat[\&quot;{#LOCATION_ID}\&quot;,\&quot;STG.{#SUBJECT_ID}.c_memcache_hit\&quot;]&quot;)+last(&quot;varnish.stat[\&quot;{#LOCATION_ID}\&quot;,\&quot;STG.{#SUBJECT_ID}.c_memcache_miss\&quot;]&quot;)+(count(&quot;varnish.stat[\&quot;{#LOCATION_ID}\&quot;,\&quot;STG.{#SUBJECT_ID}.c_memcache_hit\&quot;]&quot;,#1,0)*count(&quot;varnish.stat[\&quot;{#LOCATION_ID}\&quot;,\&quot;STG.{#SUBJECT_ID}.c_memcache_miss\&quot;]&quot;,#1,0)))</params>
                     <applications>
                        <application>
                           <name>Varnish Cache</name>
                        </application>
                     </applications>
                  </item_prototype>
               </item_prototypes>
               <graph_prototypes>
                  <graph_prototype>
                     <name>Varnish Cache[{#LOCATION}] &gt; Storages[{#SUBJECT}]: allocator failures</name>
                     <graph_items>
                        <graph_item>
                           <drawtype>FILLED_REGION</drawtype>
                           <color>C80000</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;STG.{#SUBJECT_ID}.c_fail&quot;]</key>
                           </item>
                        </graph_item>
                     </graph_items>
                  </graph_prototype>
                  <graph_prototype>
                     <name>Varnish Cache[{#LOCATION}] &gt; Storages[{#SUBJECT}]: bytes outstanding vs. available</name>
                     <type>STACKED</type>
                     <graph_items>
                        <graph_item>
                           <color>C80000</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;STG.{#SUBJECT_ID}.g_bytes&quot;]</key>
                           </item>
                        </graph_item>
                        <graph_item>
                           <sortorder>1</sortorder>
                           <color>00C800</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;STG.{#SUBJECT_ID}.g_space&quot;]</key>
                           </item>
                        </graph_item>
                     </graph_items>
                  </graph_prototype>
                  <graph_prototype>
                     <name>Varnish Cache[{#LOCATION}] &gt; Storages[{#SUBJECT}]: cache</name>
                     <graph_items>
                        <graph_item>
                           <color>00C800</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;STG.{#SUBJECT_ID}.c_memcache_hit&quot;]</key>
                           </item>
                        </graph_item>
                        <graph_item>
                           <sortorder>1</sortorder>
                           <color>C80000</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;STG.{#SUBJECT_ID}.c_memcache_miss&quot;]</key>
                           </item>
                        </graph_item>
                        <graph_item>
                           <sortorder>2</sortorder>
                           <color>0000C8</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish[&quot;{#LOCATION_ID}&quot;,&quot;STG.{#SUBJECT_ID}.cache_hit_ratio&quot;]</key>
                           </item>
                        </graph_item>
                     </graph_items>
                  </graph_prototype>
                  <graph_prototype>
                     <name>Varnish Cache[{#LOCATION}] &gt; Storages[{#SUBJECT}]: nukes</name>
                     <graph_items>
                        <graph_item>
                           <color>00C800</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;STG.{#SUBJECT_ID}.n_lru_nuked&quot;]</key>
                           </item>
                        </graph_item>
                        <graph_item>
                           <sortorder>1</sortorder>
                           <color>C80000</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;STG.{#SUBJECT_ID}.n_lru_moved&quot;]</key>
                           </item>
                        </graph_item>
                     </graph_items>
                  </graph_prototype>
                  <graph_prototype>
                     <name>Varnish Cache[{#LOCATION}] &gt; Storages[{#SUBJECT}]: spare nodes available</name>
                     <graph_items>
                        <graph_item>
                           <drawtype>FILLED_REGION</drawtype>
                           <color>00C800</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;STG.{#SUBJECT_ID}.g_sparenode&quot;]</key>
                           </item>
                        </graph_item>
                     </graph_items>
                  </graph_prototype>
                  <graph_prototype>
                     <name>Varnish Cache[{#LOCATION}] &gt; Storages[{#SUBJECT}]: vary headers</name>
                     <graph_items>
                        <graph_item>
                           <color>00C800</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;STG.{#SUBJECT_ID}.n_vary&quot;]</key>
                           </item>
                        </graph_item>
                     </graph_items>
                  </graph_prototype>
                  <graph_prototype>
                     <name>Varnish Cache[{#LOCATION}] &gt; Storages[{#SUBJECT}]: YKeys</name>
                     <graph_items>
                        <graph_item>
                           <drawtype>FILLED_REGION</drawtype>
                           <color>00C800</color>
                           <item>
                              <host>Template App Varnish Cache</host>
                              <key>varnish.stat[&quot;{#LOCATION_ID}&quot;,&quot;STG.{#SUBJECT_ID}.g_ykey_keys&quot;]</key>
                           </item>
                        </graph_item>
                     </graph_items>
                  </graph_prototype>
               </graph_prototypes>
            </discovery_rule>
         </discovery_rules>
         <tags>
            <tag>
               <tag>App</tag>
               <value>Varnish Cache</value>
            </tag>
         </tags>
         <macros>
            <macro>
               <macro>{$VARNISH_CACHE.AGENT_PROCESSES.MIN}</macro>
               <value>1</value>
            </macro>
            <macro>
               <macro>{$VARNISH_CACHE.ALLOCATOR_FAILURES_RATE.MAX}</macro>
               <value>0.0</value>
            </macro>
            <macro>
               <macro>{$VARNISH_CACHE.ALLOCATOR_FAILURES_RATE.RECOVERY.SAMPLES}</macro>
               <value>#10</value>
            </macro>
            <macro>
               <macro>{$VARNISH_CACHE.BACKEND_CONNECTION_FAILURES_RATE.MAX}</macro>
               <value>0.0</value>
            </macro>
            <macro>
               <macro>{$VARNISH_CACHE.BACKEND_CONNECTION_FAILURES_RATE.SAMPLES}</macro>
               <value>#10</value>
            </macro>
            <macro>
               <macro>{$VARNISH_CACHE.BACKEND_HEALTHINESS.SAMPLES}</macro>
               <value>#1</value>
            </macro>
            <macro>
               <macro>{$VARNISH_CACHE.BROADCASTER_PROCESSES.MIN}</macro>
               <value>1</value>
            </macro>
            <macro>
               <macro>{$VARNISH_CACHE.HTTP_HEADER_OVERFLOWS_RATE.MAX}</macro>
               <value>0.0</value>
            </macro>
            <macro>
               <macro>{$VARNISH_CACHE.ITEM_HISTORY_STORAGE_PERIOD}</macro>
               <value>30d</value>
            </macro>
            <macro>
               <macro>{$VARNISH_CACHE.ITEM_TREND_STORAGE_PERIOD}</macro>
               <value>365d</value>
            </macro>
            <macro>
               <macro>{$VARNISH_CACHE.ITEM_UPDATE_INTERVAL}</macro>
               <value>60s</value>
            </macro>
            <macro>
               <macro>{$VARNISH_CACHE.LLD_KEEP_LOST_RESOURCES_PERIOD}</macro>
               <value>30d</value>
            </macro>
            <macro>
               <macro>{$VARNISH_CACHE.LLD_KEEP_LOST_RESOURCES_PERIOD:backends}</macro>
               <value>1d</value>
            </macro>
            <macro>
               <macro>{$VARNISH_CACHE.LLD_KEEP_LOST_RESOURCES_PERIOD:counters}</macro>
               <value>1d</value>
            </macro>
            <macro>
               <macro>{$VARNISH_CACHE.LLD_UPDATE_INTERVAL}</macro>
               <value>3600s</value>
            </macro>
            <macro>
               <macro>{$VARNISH_CACHE.LLD_UPDATE_INTERVAL:counters}</macro>
               <value>60s</value>
            </macro>
            <macro>
               <macro>{$VARNISH_CACHE.LOCATIONS}</macro>
            </macro>
            <macro>
               <macro>{$VARNISH_CACHE.LRU_NUKED_OBJECTS_RATE.MAX}</macro>
               <value>0.0</value>
            </macro>
            <macro>
               <macro>{$VARNISH_CACHE.LRU_NUKED_OBJECTS_RATE.RECOVERY.SAMPLES}</macro>
               <value>#10</value>
            </macro>
            <macro>
               <macro>{$VARNISH_CACHE.MAIN_UPTIME.MIN}</macro>
               <value>600s</value>
            </macro>
            <macro>
               <macro>{$VARNISH_CACHE.MGT_UPTIME.MIN}</macro>
               <value>600s</value>
            </macro>
            <macro>
               <macro>{$VARNISH_CACHE.MSE_BOOK_SPACE.MIN}</macro>
               <value>75MB</value>
            </macro>
            <macro>
               <macro>{$VARNISH_CACHE.MSE_BOOK_SPACE.RECOVERY.MIN}</macro>
               <value>100MB</value>
            </macro>
            <macro>
               <macro>{$VARNISH_CACHE.NCSA_PROCESSES.MIN}</macro>
               <value>1</value>
            </macro>
            <macro>
               <macro>{$VARNISH_CACHE.NUKE_LIMIT_REACHS_RATE.MAX}</macro>
               <value>0.0</value>
            </macro>
            <macro>
               <macro>{$VARNISH_CACHE.NUKE_LIMIT_REACHS_RATE.RECOVERY.SAMPLES}</macro>
               <value>#10</value>
            </macro>
            <macro>
               <macro>{$VARNISH_CACHE.PROC_MEM.VARNISHD.NAME}</macro>
               <value>varnishd</value>
            </macro>
            <macro>
               <macro>{$VARNISH_CACHE.RAW_LOG_PROCESSES.MIN}</macro>
               <value>1</value>
            </macro>
            <macro>
               <macro>{$VARNISH_CACHE.SPARE_NODES.MIN}</macro>
               <value>900000</value>
            </macro>
            <macro>
               <macro>{$VARNISH_CACHE.SPARE_NODES.RECOVERY.MIN}</macro>
               <value>1000000</value>
            </macro>
            <macro>
               <macro>{$VARNISH_CACHE.THREADS.MAX}</macro>
               <value>1000</value>
            </macro>
            <macro>
               <macro>{$VARNISH_CACHE.VARNISH_PROCESSES.MIN}</macro>
               <value>2</value>
            </macro>
            <macro>
               <macro>{$VARNISH_CACHE.VCL_FAILURES_RATE.ENABLED}</macro>
               <value>1</value>
            </macro>
            <macro>
               <macro>{$VARNISH_CACHE.VCL_FAILURES_RATE.MAX}</macro>
               <value>0.0</value>
            </macro>
            <macro>
               <macro>{$VARNISH_CACHE.VCS_AGENT_PROCESSES.MIN}</macro>
               <value>1</value>
            </macro>
            <macro>
               <macro>{$VARNISH_CACHE.WORKSPACE_OVERFLOWS_RATE.MAX}</macro>
               <value>0.0</value>
            </macro>
         </macros>
      </template>
   </templates>
</zabbix_export>
